//
//  USCVerifyVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/9/11.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "USecurityCenterVerifyVC.h"

#import "USCAccountTableViewCell.h"
#import "USCVerifyTableViewCell.h"

#import "USecurityCenterUpdateVC.h"
#import "USecurityCenterResultVC.h"

@interface USecurityCenterVerifyVC ()<UITableViewDelegate, UITableViewDataSource, USCVerifyTableViewCellDelegate>

@property (strong, nonatomic) UITableView *tableView;
/* 是否需要选择验证方式（手机或邮箱） */
@property (assign, nonatomic) BOOL needSelectdVerityType;
/* 验证的方式 0-手机，1-邮箱 */
@property (assign, nonatomic) NSInteger verifyType;
/* 验证码 cell 的 indexPath */
@property (strong, nonatomic) NSIndexPath *verifyIndexPath;
/* headerView 左侧 button */
@property (strong, nonatomic) UIButton *btnL;
/* headerView 右侧 button */
@property (strong, nonatomic) UIButton *btnR;
/* 下一步 */
@property (strong, nonatomic) UIButton *btnNext;
/* 计时器 */
@property (strong, nonatomic) NSTimer *timer;
/* 倒计时时间 */
@property (assign, nonatomic) NSInteger timeDown;
/** 验证码 */
@property (nonatomic, strong) NSString *verifyCode;

@end

@implementation USecurityCenterVerifyVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self configVerifyView];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)configVerifyView
{
    _user = [UserRequest sharedInstance].user;
    // 判断是否需要选择手机或邮箱
    _needSelectdVerityType = _user.phone.length > 0 && _user.email.length > 0 ? YES : NO;
    // 如果有手机号 验证手机号 否则验证邮箱
    _verifyType = _user.phone.length > 0 ? ENUM_VerityTypePhone : ENUM_VerityTypeEmail;
    NSString *title = @"";
    switch (_securityCenterUpdateType) {
        case ENUM_ZUserSecurityCenterUpdateMethodPassword:
            title = @"修改密码";
            break;
        case ENUM_ZUserSecurityCenterUpdateMethodEmail:
            title = @"绑定邮箱";
            break;
        case ENUM_ZUserSecurityCenterUpdateMethodPhone:
            title = @"绑定手机";
            break;
        case ENUM_ZUserSecurityCenterUpdateMethodPay:
            title = @"支付密码";
            break;
        default:
            break;
    }
    self.title = title;
    
    [self headerView];
    [self configTableView];
}

- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, _needSelectdVerityType ? cHeaderHeight_54 : 0, Screen_Width, self.view.height - cHeaderHeight_54) style:UITableViewStylePlain];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.rowHeight = UITableViewAutomaticDimension;
    _tableView.estimatedRowHeight = 100;
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView.scrollEnabled = NO;
    
    [self.view addSubview:_tableView];
    
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([USCAccountTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([USCAccountTableViewCell class])];
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([USCVerifyTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([USCVerifyTableViewCell class])];
}


#pragma mark -
#pragma mark UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 2;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (0 == indexPath.row) {
        USCAccountTableViewCell *accountCell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([USCAccountTableViewCell class])];
        if (_verifyType == ENUM_VerityTypePhone) {
            accountCell.lblDesc.text = @"手机：";
            accountCell.txtfAccount.text = _user.phone;
        }
        else {
            accountCell.lblDesc.text = @"邮箱：";
            accountCell.txtfAccount.text = _user.email;
        }
        accountCell.isUpdated = _isUpdateVC;
        return accountCell;
    }
    else {
        USCVerifyTableViewCell *verifyCell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([USCVerifyTableViewCell class])];
        verifyCell.delegate = self;
        _verifyIndexPath = indexPath;
        [verifyCell.txtfVerity addTarget:self action:@selector(textFieldWithText:) forControlEvents:UIControlEventEditingChanged];
        return verifyCell;
    }
}

#pragma mark -
#pragma mark UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 44.f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 200.f;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    return [self footerView];
}

#pragma mark -
#pragma mark action

/**
 获取输入的验证码
 */
- (void)textFieldWithText:(UITextField *)textField
{
    _verifyCode = textField.text;
}

#pragma mark - 跳转

/**
 选择手机验证
 */
- (void)selectedPhoneVerify
{
    _verifyType = ENUM_VerityTypePhone;
    _btnL.selected = _verifyType == ENUM_VerityTypePhone;
    _btnR.selected = _verifyType == ENUM_VerityTypeEmail;
    [_tableView reloadData];
}

/**
 选择邮箱验证
 */
- (void)selectedEmailVeirfy
{
    _verifyType = ENUM_VerityTypeEmail;
    _btnL.selected = _verifyType == ENUM_VerityTypePhone;
    _btnR.selected = _verifyType == ENUM_VerityTypeEmail;
    [_tableView reloadData];
}

/**
 发送验证码
 */
- (void)sendVerifyCode
{
    if (_timeDown > 0) {
        return;
    }
    else {
        [self configTimer];
    }
    
    if (_verifyType == ENUM_VerityTypeEmail) {
        [[UserRequest sharedInstance] sendEmailCodeWithEmail:_user.email completion:^(id object, ErrorModel *error) {
            if (error) {
                [self presentFailureTips:error.message];
            }
        }];
    }
    else if (_verifyType == ENUM_VerityTypePhone) {
        [[UserRequest sharedInstance] sendPhoneCodeWithPhone:_user.phone completion:^(id object, ErrorModel *error) {
            if (error) {
                [self presentFailureTips:error.message];
            }
        }];
    }
}

// 下一步
- (void)click_btnNext
{
    // 6位的数字验证码
    if (_verifyCode.length == 6 || ![_verifyCode isNumber]) {
        [self checkVerifyCode];
    }
    else {
        [self presentFailureTips:@"请输入正确的验证码"];
    }
}

// 验证验证码
- (void)checkVerifyCode
{
    [[UserRequest sharedInstance] verityCodeWithType:[NSString stringWithFormat:@"%ld", _verifyType]
                                              verifi:_verifyCode
                                          completion:^(id object, ErrorModel *error) {
                                              if (error) {
                                                  [self presentFailureTips:error.message];
                                              }
                                              else {
                                                  [self toNextViewController];
                                              }
                                          }];
}

// 界面跳转
- (void)toNextViewController
{
    USecurityCenterUpdateVC *updateVC = [[USecurityCenterUpdateVC alloc] init];
    USecurityCenterVerifyVC *verifyVC = [[USecurityCenterVerifyVC alloc] init];
    USecurityCenterResultVC *resultVC = [[USecurityCenterResultVC alloc] init];
    switch (_securityCenterUpdateType) {
        case ENUM_ZUserSecurityCenterUpdateMethodPassword:
            updateVC.updateType = ENUM_UpdatePasswordTypeLogin;
            [self.navigationController pushViewController:updateVC animated:YES];
            break;
        case ENUM_ZUserSecurityCenterUpdateMethodEmail:
            if (_isUpdateVC) {
                [self.navigationController pushViewController:resultVC animated:YES];
            }
            verifyVC.isUpdateVC = YES;
            [self.navigationController pushViewController:verifyVC animated:YES];
            break;
        case ENUM_ZUserSecurityCenterUpdateMethodPhone:
            if (_isUpdateVC) {
                [self.navigationController pushViewController:resultVC animated:YES];
            }
            verifyVC.isUpdateVC = YES;
            [self.navigationController pushViewController:verifyVC animated:YES];
            break;
        case ENUM_ZUserSecurityCenterUpdateMethodPay:
            updateVC.updateType = ENUM_UpdatePasswordTypePay;
            [self.navigationController pushViewController:updateVC animated:YES];
            break;
        default:
            break;
    }
}

#pragma mark -
#pragma mark 配置计时器

/**
 配置计时器
 */
- (void)configTimer
{
    // 倒计时 60s
    _timeDown = 60;
    // 每秒更新一次倒计时
    _timer = [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(timerFireMethod:) userInfo:nil repeats:YES];
}

- (void)timerFireMethod:(NSTimer *)timer
{
    USCVerifyTableViewCell *cell = [_tableView cellForRowAtIndexPath:_verifyIndexPath];
    if (_timeDown > 0) {
        _timeDown -= 1;
        cell.btnSendVerify.userInteractionEnabled = NO;
        [cell.btnSendVerify setTitle:[NSString stringWithFormat:@"%ld", _timeDown] forState:UIControlStateNormal];
    }
    else {
        cell.btnSendVerify.userInteractionEnabled = YES;
        [cell.btnSendVerify setTitle:@"点击获取" forState:UIControlStateNormal];
        [timer invalidate];
    }
}

#pragma mark -
#pragma mark 属性

- (UIView *)headerView
{
    if (!_needSelectdVerityType) { // 如果只有手机或邮箱 不需要创建顶部选择试图
        return nil;
    }
    UIView *headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, cHeaderHeight_54)];
    headerView.backgroundColor = [UIColor whiteColor];
    
    _btnL = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, Screen_Width/2 - 1, cHeaderHeight_54 - 1)];
    [_btnL setTitle:@"手机" forState:UIControlStateNormal];
    [_btnL setTitleColor:[UIColor cm_blackColor_333333_1] forState:UIControlStateNormal];
    [_btnL setTitleColor:[UIColor cm_purpleColor_82056B_1] forState:UIControlStateSelected];
    [_btnL setBackgroundColor:[UIColor clearColor]];
    [_btnL addTarget:self action:@selector(selectedPhoneVerify) forControlEvents:UIControlEventTouchUpInside];
    _btnL.selected = _verifyType == ENUM_VerityTypePhone;
    
    _btnR = [[UIButton alloc] initWithFrame:CGRectMake(Screen_Width/2, 0, Screen_Width/2, cHeaderHeight_54 - 1)];
    [_btnR setTitle:@"邮箱" forState:UIControlStateNormal];
    [_btnR setTitleColor:[UIColor cm_blackColor_333333_1] forState:UIControlStateNormal];
    [_btnR setTitleColor:[UIColor cm_purpleColor_82056B_1] forState:UIControlStateSelected];
    [_btnR setBackgroundColor:[UIColor clearColor]];
    [_btnR addTarget:self action:@selector(selectedEmailVeirfy) forControlEvents:UIControlEventTouchUpInside];
    _btnR.selected = _verifyType == ENUM_VerityTypeEmail;
    
    UIView *lineView = [[UIView alloc] initWithFrame:CGRectMake(Screen_Width/2 - 1, (cHeaderHeight_54 - 20)/2, .5, 20)];
    lineView.backgroundColor = [UIColor cm_lineColor_E3E3E3_1];
    
    UIView *bLineView = [[UIView alloc] initWithFrame:CGRectMake(0, headerView.height - 0.5, Screen_Width, 0.5)];
    bLineView.backgroundColor = [UIColor cm_lineColor_E3E3E3_1];
    
    [headerView addSubview:_btnL];
    [headerView addSubview:_btnR];
    [headerView addSubview:lineView];
    [headerView addSubview:bLineView];
    [self.view addSubview:headerView];
    
    return headerView;
}

- (UIView *)footerView
{
    UIView *footerView = [UIView new];
    footerView.backgroundColor = [UIColor whiteColor];
    
    _btnNext = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, Screen_Width - 50, cButtonHeight_40)];
    _btnNext.backgroundColor = [UIColor cm_purpleColor_82056B_1];
    _btnNext.layer.masksToBounds = YES;
    _btnNext.layer.cornerRadius = _btnNext.height/2;
    [_btnNext setTitle:@"下一步" forState:UIControlStateNormal];
    [_btnNext setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [_btnNext addTarget:self action:@selector(click_btnNext) forControlEvents:UIControlEventTouchUpInside];
    [footerView addSubview:_btnNext];
    [_btnNext mas_makeConstraints:^(MASConstraintMaker *make) {
        make.center.equalTo(footerView);
        make.size.mas_equalTo(CGSizeMake(Screen_Width - 50, cButtonHeight_40));
    }];
    
    return footerView;
}

@end
