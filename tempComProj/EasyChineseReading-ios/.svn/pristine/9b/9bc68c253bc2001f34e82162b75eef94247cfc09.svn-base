//
//  UCSManagerAddVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/2.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UCStudentManagerAddVC.h"
#import "UserInfoAddressVC.h"

@interface UCStudentManagerAddVC () <
UITextFieldDelegate,
ZPickViewDelegate
>
//
@property (weak, nonatomic) IBOutlet UILabel *lblDescClass;
@property (weak, nonatomic) IBOutlet UILabel *lblDescName;
@property (weak, nonatomic) IBOutlet UILabel *lblDescSex;
@property (weak, nonatomic) IBOutlet UILabel *lblDescAge;
@property (weak, nonatomic) IBOutlet UILabel *lblDescPhone;
@property (weak, nonatomic) IBOutlet UILabel *lblDescEmail;
@property (weak, nonatomic) IBOutlet UILabel *lblDescPassword;
@property (weak, nonatomic) IBOutlet UILabel *lblDescRePassword;
@property (weak, nonatomic) IBOutlet UILabel *lblDescRemark;

@property (weak, nonatomic) IBOutlet UILabel *lblClass;
@property (weak, nonatomic) IBOutlet UILabel *lblSex;

@property (weak, nonatomic) IBOutlet UITextField *txtfName;
@property (weak, nonatomic) IBOutlet UITextField *txtfAge;
@property (weak, nonatomic) IBOutlet UITextField *txtfPhone;
@property (weak, nonatomic) IBOutlet UITextField *txtfEmail;
@property (weak, nonatomic) IBOutlet UITextField *txtfAreacode;

@property (weak, nonatomic) IBOutlet UITextField *txtfPassword;
@property (weak, nonatomic) IBOutlet UITextField *txtfRePassword;
@property (weak, nonatomic) IBOutlet UITextField *txtfRemark;

@property (strong, nonatomic) ZPickView *pickViewSex;   // 性别
@property (strong, nonatomic) ZPickView *pickViewClass; // 班级

@property (strong, nonatomic) NSArray *arrSex;   // 性别
@property (strong, nonatomic) NSArray *arrClass; // 班级

@property (assign, nonatomic) NSInteger sex; // 性别
@property (assign, nonatomic) NSInteger classIndex; // 班级
@property (assign, nonatomic) NSInteger accountType; // 账号类型

@end

@implementation UCStudentManagerAddVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configTableView];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark -
#pragma mark UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (0 == indexPath.row) {
        [self configPickViewClass];
    }
    else if (2 == indexPath.row) {
        [self configPickViewSex];
    }
}

#pragma mark -
#pragma mark action

- (void)updateSystemLanguage
{
    self.title = LOCALIZATION(@"创建学生");
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:LOCALIZATION(@"保存") style:UIBarButtonItemStylePlain target:self action:@selector(checkStudentInfo)];
    
    _lblDescClass.text      = LOCALIZATION(@"所属班级");
    _lblDescName.text       = LOCALIZATION(@"姓名");
    _lblDescSex.text        = LOCALIZATION(@"性别");
    _lblDescAge.text        = LOCALIZATION(@"年龄");
    _lblDescPhone.text      = LOCALIZATION(@"手机");
    _lblDescEmail.text      = LOCALIZATION(@"邮箱");
    _lblDescRemark.text     = LOCALIZATION(@"备注");
    _lblDescPassword.text   = LOCALIZATION(@"密码");
    _lblDescRePassword.text = LOCALIZATION(@"确认密码");
    
    _txtfName.placeholder       = LOCALIZATION(@"请输入学生姓名");
    _txtfAge.placeholder        = LOCALIZATION(@"请输入学生年龄");
    _txtfPhone.placeholder      = LOCALIZATION(@"请输入手机号");
    _txtfEmail.placeholder      = LOCALIZATION(@"请输入邮箱号");
    _txtfAreacode.placeholder   = LOCALIZATION(@"国家码");
    _txtfPassword.placeholder   = LOCALIZATION(@"输入密码");
    _txtfRePassword.placeholder = LOCALIZATION(@"再次输入密码");
    _txtfRemark.placeholder     = LOCALIZATION(@"备注");
}

- (void)configTableView
{
    _lblDescName.textColor       = [UIColor cm_blackColor_333333_1];
    _lblDescSex.textColor        = [UIColor cm_blackColor_333333_1];
    _lblDescAge.textColor        = [UIColor cm_blackColor_333333_1];
    _lblDescPhone.textColor      = [UIColor cm_blackColor_333333_1];
    _lblDescEmail.textColor      = [UIColor cm_blackColor_333333_1];
    _lblDescPassword.textColor   = [UIColor cm_blackColor_333333_1];
    _lblDescRePassword.textColor = [UIColor cm_blackColor_333333_1];
    _lblDescRemark.textColor     = [UIColor cm_blackColor_333333_1];

    _lblDescName.font        = [UIFont systemFontOfSize:cFontSize_16];
    _lblDescSex.font         = [UIFont systemFontOfSize:cFontSize_16];
    _lblDescAge.font         = [UIFont systemFontOfSize:cFontSize_16];
    _lblDescPhone.font       = [UIFont systemFontOfSize:cFontSize_16];
    _lblDescEmail.font       = [UIFont systemFontOfSize:cFontSize_16];
    _lblDescPassword.font    = [UIFont systemFontOfSize:cFontSize_16];
    _lblDescRePassword.font  = [UIFont systemFontOfSize:cFontSize_16];
    _lblDescRemark.font      = [UIFont systemFontOfSize:cFontSize_16];

    _txtfName.textColor       = [UIColor cm_blackColor_333333_1];
    _txtfAge.textColor        = [UIColor cm_blackColor_333333_1];
    _txtfAge.textColor        = [UIColor cm_blackColor_333333_1];
    _txtfPhone.textColor      = [UIColor cm_blackColor_333333_1];
    _txtfEmail.textColor      = [UIColor cm_blackColor_333333_1];
    _txtfPassword.textColor   = [UIColor cm_blackColor_333333_1];
    _txtfRePassword.textColor = [UIColor cm_blackColor_333333_1];
    _txtfRemark.textColor     = [UIColor cm_blackColor_333333_1];
}

#pragma mark - 保存学生信息

- (void)checkStudentInfo
{
    // 手机号检查
    if ([NSString isEmpty:_txtfName.text]) {
        [self presentFailureTips:@"姓名不能为空"];
        return;
    }

    if ([NSString isEmpty:_txtfEmail.text]) {
        [self presentFailureTips:LOCALIZATION(@"邮箱不能为空")];
        return;
    }
    else {
        if (![_txtfEmail.text isEmail]) {
            [self presentFailureTips:LOCALIZATION(@"邮箱类型错误")];
            return;
        }
    }
    
    if ([NSString isEmpty:_txtfPhone.text]) {
        [self presentFailureTips:LOCALIZATION(@"手机不能为空")];
        return;
    }
    else {
        if (![_txtfPhone.text isPhone]) {
            [self presentFailureTips:LOCALIZATION(@"手机类型错误")];
            return;
        }
    }
    
    if ([NSString isEmpty:_txtfAreacode.text]) {
        [self presentFailureTips:LOCALIZATION(@"国家码不能为空")];
        return;
    }
    
    // 密码检查
    if ([NSString isEmpty:_txtfPassword.text]) {
        [self presentFailureTips:@"密码不能为空"];
        return;
    }
    if ([NSString isEmpty:_txtfRePassword.text]) {
        [self presentFailureTips:@"确认密码不能为空"];
        return;
    }
    if (_txtfPassword.text.length > cMaxPasswordLength || _txtfPassword.text.length < cMinPasswordLength) {
        [self presentFailureTips:@"密码长度为6-16"];
        return;
    }
    if (![_txtfPassword.text isEqualToString:_txtfRePassword.text]) {
        [self presentFailureTips:@"两次输入的密码不一样，请确认后重新输入"];
        return;
    }
    
    [self organizationVerifySingleWithPhone];
}

/**
 用户验证手机的唯一性
 */
- (void)organizationVerifySingleWithPhone
{
    [[UserRequest sharedInstance] verifyAccountSingleWithUserName:_txtfPhone.text
                                                         userType:[NSString stringWithFormat:@"%ld", ENUM_AccountTypePhone]
                                                       completion:^(id object, ErrorModel *error) {
                                                           if (error) {
                                                               [self presentFailureTips:error.message];
                                                           }
                                                           else {
                                                               if ([object isEqualToString:@"0"]) { // 数据中没有该账号 可以使用
                                                                   [self organizationVerifySingleWithEmail];
                                                               }
                                                               else {
                                                                   [self presentFailureTips:LOCALIZATION(@"手机号已存在，请更换账号后重新注册")];
                                                               }
                                                           }
                                                           
                                                       }];
}

/**
 用户验证邮箱的唯一性
 */
- (void)organizationVerifySingleWithEmail
{
    [[UserRequest sharedInstance] verifyAccountSingleWithUserName:_txtfPhone.text
                                                         userType:[NSString stringWithFormat:@"%ld", ENUM_AccountTypeEmail]
                                                       completion:^(id object, ErrorModel *error) {
                                                           if (error) {
                                                               [self presentFailureTips:error.message];
                                                           }
                                                           else {
                                                               if ([object isEqualToString:@"0"]) { // 数据中没有该账号 可以使用
                                                                   [self saveStudentInfo];
                                                               }
                                                               else {
                                                                   [self presentFailureTips:LOCALIZATION(@"邮箱已存在，请更换账号后重新注册")];
                                                               }
                                                           }
                                                       }];
}

- (void)saveStudentInfo
{
    ClassModel *classInfo = _arrClass[_classIndex];
    
    [[ClassRequest sharedInstance] addStudentInfoWithClassId:classInfo.classId
                                                        name:_txtfName.text
                                                         age:[_txtfAge.text integerValue]
                                                       Phone:_txtfPhone.text
                                                    areacode:_txtfAreacode.text
                                                       email:_txtfEmail.text
                                                    password:_txtfPassword.text
                                                         sex:_sex
                                                      remark:_txtfRemark.text
                                                  completion:^(id object, ErrorModel *error) {
                                                      if (error) {
                                                          [self presentFailureTips:error.message];
                                                      }
                                                      else {
                                                          UserModel *user = [UserModel new];
                                                          
                                                          user.name = _txtfName.text;
                                                          user.age = [_txtfAge.text integerValue];
                                                          user.sex = _sex;
                                                          user.email = _txtfEmail.text;
                                                          user.phone = _txtfPhone.text;
                                                          user.classId = classInfo.classId;
                                                          user.className = classInfo.className;
                                                          user.remark = _txtfRemark.text;
                                                          
                                                          NSArray *classIds = [NSDictionary mj_objectArrayWithKeyValuesArray:object];
                                                          user.userId = [[classIds firstObject][@"userId"] integerValue];
                                                          
                                                          [self fk_postNotification:kNotificationCreateStudentInfo object:user];
                                                          [self.navigationController popViewControllerAnimated:YES];
                                                      }
                                                  }];
}

/**
 性别选择
 */
- (void)configPickViewSex
{
    if (_pickViewSex == nil) {
        _pickViewSex = [[ZPickView alloc] initWithFrame:self.view.bounds dataSource:self.arrSex selected:0];
        _pickViewSex.delegates = self;
        [self.view addSubview:_pickViewSex];
    }
    [self resignAllFirstResponder];
    [_pickViewSex show];
}

/**
 班级选择
 */
- (void)configPickViewClass
{
    if (_pickViewClass == nil) {
        _pickViewClass = [[ZPickView alloc] initWithFrame:self.view.bounds dataSource:self.arrClass selected:0];
        _pickViewClass.delegates = self;
        [self.view addSubview:_pickViewClass];
    }
    [self resignAllFirstResponder];
    [_pickViewClass show];
}

#pragma mark - ZPickViewDelegate

- (void)ZPickerViewCancel:(ZPickView *)picker
{
    [picker hidden];
}

- (void)ZPickerView:(ZPickView *)picker makeSureIndex:(NSInteger)index
{
    if ([picker isEqual:_pickViewSex]) {
        _sex = index;
        _lblSex.text = _arrSex[index];
    }
    else {
        _classIndex = index;
        ClassModel *classInfo = _arrClass[index];
        _lblClass.text = classInfo.className;
    }
    [picker hidden];
}

#pragma mark - UITextFieldDelegate

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    if (_pickViewSex.showing) {
        [_pickViewSex hidden];
    }
    if (_pickViewClass.showing) {
        [_pickViewClass hidden];
    }
    return YES;
}

#pragma mark - textfield delegate

- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    if ([textField isEqual:_txtfAreacode]) {
        [self toSelectCountry];
        return NO;
    }
    return YES;
}

/**
 选择国家
 */
- (void)toSelectCountry
{
    UserInfoAddressVC *addressVC = [[UserInfoAddressVC alloc] init];
    addressVC.language = [UserRequest sharedInstance].language;
    addressVC.selectedCountryBlock = ^(CountryModel * country){
        _txtfAreacode.text = country.areacode;
    };
    [self.navigationController pushViewController:addressVC animated:YES];
}

#pragma mark - 取消第一响应者

- (void)resignAllFirstResponder
{
    [self.view endEditing:YES];
}

#pragma mark - 属性

- (NSArray *)arrClass
{
    if (_arrClass == nil) {
        _arrClass = [[CacheDataSource sharedInstance] loadCacheWithCacheKey:CacheKey_ClassesList];
    }
    return _arrClass;
}

- (NSArray *)arrSex
{
    if (_arrSex == nil) {
        _arrSex = @[LOCALIZATION(@"男") , LOCALIZATION(@"女")];
    }
    return _arrSex;
}


@end
