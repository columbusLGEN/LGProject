//
//  UMessageVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/8/30.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UserMessageVC.h"

#import "UMessageSystemTableViewCell.h"
#import "UMessageTableViewCell.h"

@interface UserMessageVC ()<UITableViewDelegate, UITableViewDataSource>

@property (strong, nonatomic) UITableView *tableView;

@property (strong, nonatomic) NSMutableArray *arrMessages;

@end

@implementation UserMessageVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configTableView];
    
    [self getNewMessage];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

- (void)updateSystemLanguage
{
    self.title = LOCALIZATION(@"消息");
}

#pragma mark -
    
- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
    
    _tableView.delegate = self;
    _tableView.dataSource = self;
    
    _tableView.estimatedRowHeight = 100;
    _tableView.rowHeight = UITableViewAutomaticDimension;
    
    _tableView.tableFooterView = [UIView new];
    
    
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UMessageSystemTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UMessageSystemTableViewCell class])];
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UMessageTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UMessageTableViewCell class])];
    [self.view addSubview:_tableView];
}


- (void)getNewMessage
{
    self.arrMessages = [[CacheDataSource sharedInstance] loadCacheWithCacheKey:CacheKey_MessagesReaded];

    [[FriendRequest sharedInstance] getMessageAndShareBookCompletion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            NSArray *array = [MessageModel mj_objectArrayWithKeyValuesArray:object];
            if (array.count > 0) {
                [_arrMessages addObjectsFromArray:array];
//                [[CacheDataSource sharedInstance] setCache:_arrMessages withCacheKey:CacheKey_MessagesReaded];
                [_tableView reloadData];
            }
        }
    }];
}


#pragma mark - UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.arrMessages.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    MessageModel *message = _arrMessages[indexPath.row];
    if (message.messageType == ENUM_MessageTypeSystem) {
        UMessageSystemTableViewCell *systemCell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UMessageSystemTableViewCell class])];
        systemCell.data = message;
        return systemCell;
    }
    else {
        UMessageTableViewCell *messageCell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UMessageTableViewCell class])];
        messageCell.data = message;
        return messageCell;
    }
}

#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
}

#pragma mark - 属性

- (NSMutableArray *)arrMessages
{
    if (_arrMessages == nil) {
        _arrMessages = [NSMutableArray array];
    }
    return _arrMessages;
}

@end
