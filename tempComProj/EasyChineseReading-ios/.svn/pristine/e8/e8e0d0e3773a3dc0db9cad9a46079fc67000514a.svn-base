//
//  ECREpubReader.m
//  EasyChineseReading-ios
//
//  Created by Peanut Lee on 2017/9/21.
//  Copyright © 2017年 retech. All rights reserved.
//

#import "ECREpubReader.h"
//#import "ECRLocalFileManager.h"
#import <YMEpubReaderKit/YMEpubReaderKit.h>
#import <YMEpubReaderKit/Bookmark.h>

@interface ECREpubReader ()<
YMEpubReaderManagerDelegate
>
@property (strong,nonatomic) NSArray *localTestBooks;//
@property (strong,nonatomic) YMEpubReaderManager *ymepubReader;//
@property (strong,nonatomic) BookModel *cuBookModel;//

@end

@implementation ECREpubReader

// MARK: 单本阅读
- (void)readBookWithPath:(NSString *)path fromController:(UIViewController *)vc bookModel:(BookModel *)bookModel{
    self.cuBookModel = bookModel;
    // 加载之前,需要判断路径是否存在
    NSLog(@"epub_book_path -- %@",path);
    // 一定不要加载path 下的 未解密文件, 否则会造成 读取书籍错误
    BOOL pathIsExist = [[NSFileManager defaultManager] fileExistsAtPath:path];
    if (pathIsExist) {
        NSArray *bookArr = [self.ymepubReader loadBookWithPath:path];
        NSLog(@"YMEpubReaderManager.bookArray -- %@",bookArr);
        if (self.ymepubReader.bookArray.count > 0) {
            NSLog(@"mybooks -- %@",self.ymepubReader.bookArray);
            MyBook *book = [self.ymepubReader.bookArray lastObject];
            [self.ymepubReader readBook:book fromController:vc];
        }
    }else{
        NSLog(@"书籍路径不存在 -- ");
    }
}

#pragma mark - YMEpubReaderManagerDelegate
// read controller 生命周期 回调
- (void)willBeginRead{
    NSLog(@"willBeginRead");
}
- (void)didBeginRead{
    NSLog(@"didBeginRead");
}
- (void)willEndRead{
    NSLog(@"willEndRead");
}
- (void)didEndRead{
    NSLog(@"didEndRead");
}

//添加书摘或笔记，对应回调
- (void)didAddDigest:(BookDigest *)digest{
    // 笔记id
    // bookid
    // 章节索引
    // 章节名称
    
}
- (void)didDeleteDigest:(BookDigest *)digest{

}
//添加书签，对应回调
- (void)didAddBookMark:(Bookmark *)bookMark{
    

}
- (void)didDeleteBookMark:(Bookmark *)bookMark{

}

+ (instancetype)sharedEpubReader{
    static id instance;
    static dispatch_once_t once;
    dispatch_once(&once, ^{
        instance = [self new];
    });
    return instance;
}
- (YMEpubReaderManager *)ymepubReader{
    if (_ymepubReader == nil) {
        _ymepubReader = [YMEpubReaderManager shardInstance];
        _ymepubReader.delegate = self;
    }
    return _ymepubReader;
}


@end


