//
//  ULeaseTableViewCell.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/6.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UserLeaseTableViewCell.h"

#import "ULeaseBookCollectionViewCell.h"
#import "ULeaseCoverCollectionViewCell.h"

static NSInteger const kShowBookNumber_pad   = 4;
static NSInteger const kShowBookNumber_phone = 3;
static CGFloat const kCellPlace = 10;
static CGFloat const kCollectionHeight_pad   = 200;
static CGFloat const kCollectionHeight_phone = 150;

@interface UserLeaseTableViewCell () <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>

@property (weak, nonatomic) IBOutlet UILabel *lblLeaseEndTime;  // 包月截止时间
@property (weak, nonatomic) IBOutlet UILabel *lblLeaseContinue; // 包月续费
@property (weak, nonatomic) IBOutlet UICollectionView *collectionView;

@property (weak, nonatomic) IBOutlet NSLayoutConstraint *collectionHeightConstraint;

@property (nonatomic, strong) UICollectionViewFlowLayout *layout; // collection layout

@property (nonatomic, strong) NSArray *arrBooks; // 包月的图书

@property (strong, nonatomic) SerialModel *serial; // 系列

@end

@implementation UserLeaseTableViewCell

- (void)awakeFromNib {
    [super awakeFromNib];
    // Initialization code
    [self configLeaseTableCell];
    [self configCollectionView];
    [self addGestureRecognizer];
}

- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

#pragma mark - 配置界面

- (void)configLeaseTableCell
{
    _lblLeaseEndTime.textColor  = [UIColor cm_blackColor_666666_1];
    _lblLeaseContinue.textColor = [UIColor cm_orangeColor_BB7435_1];
    
    _lblLeaseEndTime.font  = [UIFont systemFontOfSize:cFontSize_14];
    _lblLeaseContinue.font = [UIFont systemFontOfSize:cFontSize_14];
    
    _collectionView.layer.borderColor = [UIColor cm_lineColor_D9D7D7_1].CGColor;
    _collectionView.layer.borderWidth = .5f;
    
    _lblLeaseContinue.text = [NSString stringWithFormat:@"%@ >", LOCALIZATION(@"续期")];
}

- (void)configCollectionView
{
    _collectionHeightConstraint.constant = isPad ? kCollectionHeight_pad : kCollectionHeight_phone; //ipad
    _collectionView.scrollEnabled = NO;
    _collectionView.collectionViewLayout = self.layout;
    
    [_collectionView registerClass:[ULeaseCoverCollectionViewCell class] forCellWithReuseIdentifier:NSStringFromClass([ULeaseCoverCollectionViewCell class])];
    [_collectionView registerClass:[ULeaseBookCollectionViewCell  class] forCellWithReuseIdentifier:NSStringFromClass([ULeaseBookCollectionViewCell  class])];
}

// 添加点击跳转续费手势
- (void)addGestureRecognizer
{
    UITapGestureRecognizer *tapContinue = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(continueSelectedLease:)];
    [_lblLeaseContinue addGestureRecognizer:tapContinue];
}

#pragma mark - 更新数据

- (void)dataDidChange
{
    _serial = [SerialModel mj_objectWithKeyValues:self.data];
    _lblLeaseEndTime.text = [NSString stringWithFormat:@"%@: %@", LOCALIZATION(@"到期时间"), _serial.endTime];
    [_collectionView reloadData];
}

#pragma mark - UICollectionViewDataSource

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
//    NSInteger max = isPad ? kShowBookNumber_pad : kShowBookNumber_phone;
//    return _serial.series.count + 1 > max ? max + 1 : _serial.series.count + 1;
    return 4;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    ULeaseBookCollectionViewCell *bookCell = [collectionView dequeueReusableCellWithReuseIdentifier:NSStringFromClass([ULeaseBookCollectionViewCell class]) forIndexPath:indexPath];
    ULeaseCoverCollectionViewCell *coverCell = [collectionView dequeueReusableCellWithReuseIdentifier:NSStringFromClass([ULeaseCoverCollectionViewCell class]) forIndexPath:indexPath];
    if (0 == indexPath.row) {
        coverCell.data = _serial;
        return coverCell;
    }
    else {
        bookCell.data = _serial.series.count > 0 ? _serial.series[indexPath.row - 1] : nil;
        return bookCell;
    }
}

#pragma mark - UICollectionViewDelegate

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    self.toSerialBooksListView();
}

#pragma mark - UICollectionViewDelegateFlowLayout

- (UICollectionViewFlowLayout *)layout
{
    if (!_layout) {
        _layout = [[UICollectionViewFlowLayout alloc] init];
        
        NSInteger showBookNumber = isPad ? kShowBookNumber_pad + 1 : kShowBookNumber_phone + 1;
        CGFloat itemWidth  = (Screen_Width - 12*2 - kCellPlace*(showBookNumber + 1))/showBookNumber;
        CGFloat itemHeight = isPad ? kCollectionHeight_pad - kCellPlace*2 : kCollectionHeight_phone - kCellPlace*2;
        
        _layout.minimumLineSpacing = kCellPlace;
        _layout.minimumInteritemSpacing = kCellPlace;
        _layout.sectionInset = UIEdgeInsetsMake(kCellPlace, kCellPlace, kCellPlace, kCellPlace);
        _layout.itemSize = CGSizeMake(itemWidth, itemHeight);
    }
    return _layout;
}

#pragma mark - action

- (void)continueSelectedLease:(UITapGestureRecognizer *)tap
{
    [self.delegate continueLeaseWithSerial:_serial];
}

@end
