//
//  ECRLocalFileFinder.m
//  EasyChineseReading-ios
//
//  Created by Peanut Lee on 2017/12/8.
//  Copyright © 2017年 retech. All rights reserved.
//

#import "ECRLocalFileFinder.h"
#import "ECRBookrackModel.h"
#import "ECRLocalFileManager.h"
#import "ReaderViewController.h"

@interface ECRLocalFileFinder ()
/** 书架模型数组 */
@property (strong,nonatomic) NSArray<ECRBookrackModel *> *bookrackModels;

@end

@implementation ECRLocalFileFinder

+ (void)findLocalEpubAndPdfInDocuments{
    [[self sharedInstance] findLocalEpubAndPdfInDocuments];
}
- (void)findLocalEpubAndPdfInDocuments{
    NSString *documentPath = [NSHomeDirectory() stringByAppendingPathComponent:@"Documents"];
    NSArray *array = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:documentPath error:nil];
    [array enumerateObjectsUsingBlock:^(NSString *path, NSUInteger idx, BOOL * _Nonnull stop) {
//        NSLog(@"path -- %@",path);
        if ([path hasSuffix:@"pdf"]) {
            [self setUpBookrackModelWithPath:path eBookformat:BookModelBookFormatPDF];
        }
        if ([path hasSuffix:@"epub"]) {
            [self setUpBookrackModelWithPath:path eBookformat:BookModelBookFormatEPUB];
        }
        
    }];
}
- (void)setUpBookrackModelWithPath:(NSString *)path eBookformat:(BookModelBookFormat)eBookformat{
    NSString *suffix = suffixWithFormat(eBookformat);
    if ([path hasSuffix:suffix]) {
        NSString *fileAbsulotePath = [[self sandBoxDocumentsPath] stringByAppendingString:[NSString stringWithFormat:@"/%@",path]];
        long long fileSize = [ECRLocalFileManager localFileSizeWithPath:fileAbsulotePath];
        NSLog(@"%@文件大小 -- %lld",suffix,fileSize);
        NSLog(@"%@文件 绝对路径 -- %@",suffix,fileAbsulotePath);
        
    }
}

/** 但会沙盒 Documents 路径 */
- (NSString *)sandBoxDocumentsPath{
    return [NSHomeDirectory() stringByAppendingPathComponent:@"Documents"];
}

- (instancetype)init{
    if (self = [super init]) {
        
    }
    return self;
}

+ (instancetype)sharedInstance{
    static id instance;
    static dispatch_once_t once;
    dispatch_once(&once, ^{
        instance = [self new];
    });
    return instance;
}
- (NSArray<ECRBookrackModel *> *)bookrackModels{
    if (_bookrackModels == nil) {
        _bookrackModels = [NSMutableArray array];
    }
    return _bookrackModels;
}

NSString *suffixWithFormat(BookModelBookFormat format){
    switch (format) {
        case BookModelBookFormatPDF:
            return @"pdf";
            break;
        case BookModelBookFormatEPUB:
            return @"epub";
        default:
            return @"";
    }
}
@end
