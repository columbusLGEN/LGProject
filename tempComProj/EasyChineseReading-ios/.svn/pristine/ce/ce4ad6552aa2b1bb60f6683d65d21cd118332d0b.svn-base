//
//  UOrderListViewController.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/2.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UOrderListViewController.h"

#import "UserOrderTableViewCell.h"
#import "UserOrderHeaderView.h"
#import "UserOrderFooterView.h"

#import "UOrderDetailVC.h"

@interface UOrderListViewController ()<UITableViewDelegate, UITableViewDataSource, UOrderFooterViewDelegate>

@property (strong, nonatomic) UITableView *tableView;
@property (strong, nonatomic) NSMutableArray *arrDataSource;   // 数据

@property (nonatomic, assign) NSInteger currentPage;    // 当前页
@property (nonatomic, strong) EmptyView *emptyView;     // 没有数据

@end

@implementation UOrderListViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    self.view.backgroundColor = [UIColor whiteColor];
    
    [self configTableView];
    [self.view addSubview:self.emptyView];
    [self configMJRefresh];
    [self getFirstPageOrderData];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 配置界面

- (void)updateSystemLanguage
{
    [self.emptyView updateEmptyViewWithType:ENUM_EmptyResultTypeUnknow Image:nil desc:LOCALIZATION(@"还没有购买过图书") subDesc:nil];
    [_tableView reloadData];
}

- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height - cHeaderHeight_44 - cHeaderHeight_64) style:UITableViewStyleGrouped];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.backgroundColor = [UIColor clearColor];
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView.showsVerticalScrollIndicator = NO;

    [self.view addSubview:_tableView];
    
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UserOrderTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UserOrderTableViewCell class])];
    
    // 自适应高度
    self.tableView.estimatedRowHeight = 10;
    self.tableView.rowHeight = UITableViewAutomaticDimension;
}

- (void)configMJRefresh
{
    _tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [self getFirstPageOrderData];
    }];
    _tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        [self getOrdersDataWithPage:_currentPage];
    }];
}

#pragma mark - 获取数据

- (void)getFirstPageOrderData
{
    _currentPage = 0;
    [[OrderRequest sharedInstance] getOrderListWithPage:_currentPage
                                            orderStatus:ENUM_ZOrderStateDone
                                              orderType:[NSString stringWithFormat:@"%ld", ENUM_PayPurposeBuy]
                                                 length:[NSString stringWithFormat:@"%ld", cListNumber_10]
                                             completion:^(id object, ErrorModel *error) {
                                                 [_tableView.mj_header endRefreshing];
                                                 if (error) {
                                                     [self presentFailureTips:error.message];
                                                 }
                                                 else {
                                                     _arrDataSource = [OrderModel mj_objectArrayWithKeyValuesArray:object];
                                                     if (_arrDataSource.count > 0) {
                                                         _currentPage += 1;
                                                     }
                                                     _emptyView.hidden = _arrDataSource.count > 0;
                                                     [self.tableView reloadData];
                                                 }
                                             }];
}

- (void)getOrdersDataWithPage:(NSInteger)page
{
    [[OrderRequest sharedInstance] getOrderListWithPage:page
                                            orderStatus:ENUM_ZOrderStateDone
                                              orderType:[NSString stringWithFormat:@"%ld", ENUM_PayPurposeBuy]
                                                 length:[NSString stringWithFormat:@"%ld", cListNumber_10]
                                             completion:^(id object, ErrorModel *error) {
                                                 [_tableView.mj_footer endRefreshing];
                                                 if (error) {
                                                     [self presentFailureTips:error.message];
                                                 }
                                                 else {
                                                     NSArray *array = [OrderModel mj_objectArrayWithKeyValuesArray:object];
                                                     if (array.count > 0) {
                                                         _currentPage += 1;
                                                         _emptyView.hidden = YES;
                                                         [self.arrDataSource addObjectsFromArray:array];
                                                         [self.tableView reloadData];
                                                     }
                                                 }
                                             }];
}

#pragma mark -
#pragma mark UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return _arrDataSource.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    OrderModel *order = _arrDataSource[section];
    return order.books.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UserOrderTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UserOrderTableViewCell class])];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    cell.index = indexPath.row;
    cell.data = _arrDataSource[indexPath.section];
    return cell;
}

#pragma mark -
#pragma mark UITableViewDelegate

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    OrderModel *order = _arrDataSource[section];
    UserOrderHeaderView *headerView = [UserOrderHeaderView loadFromNib];
    headerView.data = order;
    return headerView;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    OrderModel *order = _arrDataSource[section];
    UserOrderFooterView *footerView = [UserOrderFooterView loadFromNib];
    footerView.delegate = self;
    footerView.data = order;
    return footerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return isPad ? cHeaderHeight_44 + 12 : cHeaderHeight_44;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    OrderModel *order = [OrderModel mj_objectWithKeyValues:_arrDataSource[section]];

    return order.orderStatus == ENUM_ZOrderStateScore ? 110 : cHeaderHeight_54;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self.tableView deselectRowAtIndexPath:indexPath animated:YES];
    UOrderDetailVC *detail = [[UOrderDetailVC alloc] init];
    detail.order = _arrDataSource[indexPath.section];
    [self.navigationController pushViewController:detail animated:YES];
}

#pragma mark -
#pragma mark UOrderFooterViewDelegate

/**
 评价订单
 */
- (void)evaluateWithOrder:(OrderModel *)order
{
    UOrderDetailVC *detail = [[UOrderDetailVC alloc] init];
    detail.order = order;
    [self.navigationController pushViewController:detail animated:YES];
}

#pragma mark -

- (EmptyView *)emptyView
{
    if (_emptyView == nil) {
        _emptyView = [EmptyView loadFromNibWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height)];
    }
    return _emptyView;
}

- (NSMutableArray *)arrDataSource
{
    if (_arrDataSource == nil) {
        _arrDataSource = [NSMutableArray array];
    }
    return _arrDataSource;
}

@end
