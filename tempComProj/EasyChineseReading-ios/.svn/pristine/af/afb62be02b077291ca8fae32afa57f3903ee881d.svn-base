//
//  LoginDetailVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/9/8.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "LoginDetailVC.h"

#import "LTextFieldTableViewCell.h"
#import "LButtonTableViewCell.h"
#import "LFooterView.h"

#import "RegisterVC.h"              // 注册
#import "USecurityCenterVerifyVC.h" // 找回密码

@interface LoginDetailVC () <
UITableViewDelegate,
UITableViewDataSource,
UITextFieldDelegate,
LFooterViewDelegate,
LButtonTableViewCellDelegate
>

@property (strong, nonatomic) UITableView *tableView;
@property (strong, nonatomic) NSArray *arrViewConfiguration;   // 界面配置

/** 键盘高度 */
@property (assign, nonatomic) CGFloat keyBoardHeight;
/** table 偏移量 */
@property (assign, nonatomic) CGFloat tableOffset;
/** 选中的cell */
@property (strong, nonatomic) NSIndexPath *selectedIndexPath;

/** 用户名 */
@property (nonatomic, strong) NSString *user;
/** 密码 */
@property (strong, nonatomic) NSString *password;

@end

static CGFloat const kHeaderHeight = 10.f;  // tableViewHeader 高度 （空白）
static CGFloat const kFooterHeight = 150.f; // tableViewFooter 的高度

@implementation LoginDetailVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self configTableView];
    [self addNotification];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark -
#pragma mark 配置登录界面

- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 10, Screen_Width,  self.view.height - cHeaderHeight_64 - cHeaderHeight_44 - 10) style:UITableViewStyleGrouped];
    _tableView.backgroundColor = [UIColor whiteColor];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.rowHeight = UITableViewAutomaticDimension;
    _tableView.estimatedRowHeight = 100;
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    [self.view addSubview:_tableView];
    
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([LTextFieldTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([LTextFieldTableViewCell class])];
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([LButtonTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([LButtonTableViewCell class])];
}

- (void)addNotification
{
    // 监听 键盘出现或改变
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillShow:)
                                                 name:UIKeyboardWillShowNotification
                                               object:nil];
    // 监听 键盘退出
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillHide:)
                                                 name:UIKeyboardWillHideNotification
                                               object:nil];
}

#pragma mark -
#pragma mark UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.arrViewConfiguration.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:_arrViewConfiguration[indexPath.row][@"identify"]];
    cell.data = _arrViewConfiguration[indexPath.row];
    
    if ([cell.reuseIdentifier isEqualToString:NSStringFromClass([LButtonTableViewCell class])]) {
        LButtonTableViewCell *bCell = (LButtonTableViewCell *)cell;
        bCell.delegate = self;
    }
    
    [self configTextWithCell:cell];
    
    return cell;
}

#pragma mark -
#pragma mark UITableViewDelegate

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    LFooterView *footerView = [LFooterView loadFromNib];
    
    footerView.delegate = self;
    footerView.loginType = _loginType;
    
    return footerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return kFooterHeight;
}

#pragma mark - UIScrollViewDelegate

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    UITableViewCell *cell = [_tableView cellForRowAtIndexPath:_selectedIndexPath];
    [cell resignAllFirstResponder];
}

#pragma mark - LFooterViewDelegate

// 第三方登录
- (void)loginByIndex:(NSInteger)index
{
    // TODO: 0 微信登录 1 北语登录
    if (0 == index) {
        
    }
    else if (1 == index) {
        
    }
}
// 注册
- (void)registerNow
{
    RegisterVC *registerVC = [RegisterVC new];
    registerVC.hidesBottomBarWhenPushed = NO;
    [self.navigationController pushViewController:registerVC animated:YES];
}
// 忘记密码
- (void)forgetPassword
{
    USecurityCenterVerifyVC *verifyVC = [[USecurityCenterVerifyVC alloc] init];
    verifyVC.securityCenterUpdateType = ENUM_ZUserSecurityCenterUpdateMethodForget;
    verifyVC.verifyLoginUser          = NO;
    [self.navigationController pushViewController:verifyVC animated:YES];
}

#pragma mark - LButtonTableViewCellDelegate

/** 登录 */
- (void)login
{
    NSString *userType = @""; // 用户类型
    
    if ([NSString isEmpty:_user]) {
        [self presentFailureTips:@"账号不能为空"];
        return;
    }
    
    if ([_user isEmail]) {
        userType = [NSString stringWithFormat:@"%lu", (unsigned long)ENUM_AccountTypeEmail];
    }
    else if ([_user isPhone]) {
        userType = [NSString stringWithFormat:@"%lu", (unsigned long)ENUM_AccountTypePhone];
    }
    else {
        [self presentFailureTips:@"账号类型错误，账号为手机/邮箱号"];
        return;
    }
    
    if ([NSString isEmpty:_password]) {
        [self presentFailureTips:@"请输入密码"];
        return;
    }
    if (_password.length > cMaxPasswordLength || _password.length < cMinPasswordLength) {
        [self presentFailureTips:@"密码长度为6-16"];
        return;
    }
    [[UserRequest sharedInstance] loginWithType:[NSString stringWithFormat:@"%ld", ENUM_LoginTypePassword]
                                       userType:userType
                                           user:_user
                                       password:_password
                                         userId:@""
                                          token:@""
                                     completion:^(id object, ErrorModel *error) {
                                         if (error) {
                                             [self presentFailureTips:error.message];
                                         }
                                         else {
                                             UserModel *user = [UserModel mj_objectWithKeyValues:object[@"user"]];
                                             [UserRequest sharedInstance].user = user;
                                             [UserRequest sharedInstance].token = object[@"token"];
                                             [[UserRequest sharedInstance] saveCache];
                                             [self.navigationController popViewControllerAnimated:YES];
                                         }
                                     }];
}

/** 记住密码 */
- (void)rememberPassword
{

}

#pragma mark - 键盘监听

// 键盘出现或改变
- (void)keyboardWillShow:(NSNotification *)notification
{
    //获取键盘的高度
    NSDictionary *userInfo = [notification userInfo];
    NSValue *aValue = [userInfo objectForKey:UIKeyboardFrameEndUserInfoKey];
    CGRect keyboardRect = [aValue CGRectValue];
    _keyBoardHeight = keyboardRect.size.height;
    
    UITableViewCell *cell = [_tableView cellForRowAtIndexPath:_selectedIndexPath];
    if (cell.y + cell.height > self.view.height - _keyBoardHeight) {
        _tableOffset = (cell.y + cell.height) - self.view.height + _keyBoardHeight;
        NSLog(@"offset %f", _tableOffset);
        //        [_tableView setOffset:CGPointMake(-_tableView.width, -_tableOffset)];
        _tableView.frame = CGRectMake(0, -_tableOffset, Screen_Width, self.view.height);
    }
}

// 键盘退出
- (void)keyboardWillHide:(NSNotification *)notification
{
    _tableView.frame = CGRectMake(0, 0, Screen_Width, self.view.height);
}

#pragma mark - action 

- (void)configTextWithCell:(UITableViewCell *)cell
{
    LTextFieldTableViewCell *tCell = (LTextFieldTableViewCell *)cell;
    if ([cell.reuseIdentifier isEqualToString:NSStringFromClass([LTextFieldTableViewCell class])]) {
        [tCell.txtfContent addTarget:self action:@selector(textFieldWithText:) forControlEvents:UIControlEventEditingChanged];
    }
}

- (void)textFieldWithText:(UITextField *)textField
{
    switch (textField.tag) {
        case 100: _user = textField.text;     break;
        case 101: _password = textField.text; break;
        default: break;
    }
}

#pragma mark -
#pragma mark 属性
#pragma mark 界面配置

- (NSArray *)arrViewConfiguration
{
    if (_arrViewConfiguration == nil) {
        _arrViewConfiguration = @[@{@"index": @"100", @"identify": NSStringFromClass([LTextFieldTableViewCell class]), @"placeHolder": @"请输入邮箱/手机号", @"icon": @"login_user"},
                                  @{@"index": @"101", @"identify": NSStringFromClass([LTextFieldTableViewCell class]), @"placeHolder": @"请输入密码", @"icon": @"login5", @"password": @"1"},
                                  @{@"index": @"103", @"identify": NSStringFromClass([LButtonTableViewCell class]),    @"remember": @(1)},];
    }
    return _arrViewConfiguration;
}



@end
