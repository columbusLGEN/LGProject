//
//  ECRSearchBooksViewController.m
//  EasyChineseReading-ios
//
//  Created by lee on 2017/9/5.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "ECRSearchBooksViewController.h"
#import "ECRSearchTitleView.h"
#import "ECRClassSortModel.h"

@interface ECRSearchBooksViewController ()<
ECRSearchTitleViewDelegate
>
@property (copy,nonatomic) NSString *searchContent;//
@property (assign,nonatomic) BOOL first;//
@property (strong,nonatomic) UIButton *closeButton;//

@end

@implementation ECRSearchBooksViewController
@synthesize classModel = _classModel;

- (void)setClassModel:(ECRClassSortModel *)classModel{
    _classModel = classModel;
    [self setFilterObject:classModel.id forKey:0];
    // 获取 filterDict 中 key为0 的值(汉语读物,文化读物,互动教材3选1)
    NSString *monkeyId = [self objectForFilterDictWithKey:0];
    // 汉语读物(id425)为分类, 互动教材和文化读物为系列
    if (classModel.type == 1) {// 分类
        self.xilie = nil;
        [self.bookClassIds addObject:monkeyId];
        
    }
    if (classModel.type == 2) {// 系列
        self.bookClassIds = nil;
        [self.xilie addObject:monkeyId];
    }
    [self loadFilterData];
    if (self.first) {
        [self stView:nil content:self.searchContent];
    }
}

// MARK: 搜索
- (void)stView:(ECRSearchTitleView *)view content:(NSString *)content{
    self.first = YES;
    // MARK: 根据content 开始搜索
    self.searchContent = content;
    NSLog(@"content -- %@",self.searchContent);
    NSString *classId;
    NSString *xilieId;
    if (self.xilie.count == 0) {
        if (self.classModel == nil) {
            classId = @"0";
        }else{
            xilieId = @"";
            classId = [self.bookClassIds componentsJoinedByString:@","];
        }
    }else{
        classId = @"0";
        xilieId = [self.xilie componentsJoinedByString:@","];
    }
    self.requestPage = 0;
    NSLog(@"classid -- %@",classId);
    NSLog(@"xilie -- %@",xilieId);
    [[ECRDataHandler sharedDataHandler] bmListDataWithSpecial:nil series:xilieId classify:classId length:100 page:self.requestPage sort:0 searchName:content success:^(id object) {
        self.array = [NSMutableArray arrayWithArray:object];
        if (self.array.count == 0) {
            [self presentFailureTips:LOCALIZATION(@"暂无数据")];
        }else{
        }
        self.requestPage = self.array.count;
        NSLog(@"requestPage -- %ld",self.requestPage);
        [[NSOperationQueue mainQueue] addOperationWithBlock:^{
            [self.tableView.mj_header endRefreshing];
            self.tableView.hidden = NO;
            [self.tableView reloadData];
        }];
        
    } failure:^(NSString *msg) {
        self.tableView.hidden = YES;
        [self presentFailureTips:msg];
    } commenFailure:^(NSError *error) {
        self.tableView.hidden = YES;
        [self presentFailureTips:LOCALIZATION(@"链接失败, 请检查你的网络")];
    }];
}

// MARK: 加载更多数据
- (void)loadMoreListData{
    NSString *classId;
    NSString *xilieId;
    if (self.xilie.count == 0) {
        if (self.classModel == nil) {
            classId = @"0";
        }else{
            xilieId = @"0";
            classId = [self.bookClassIds componentsJoinedByString:@","];
        }
    }else{
        classId = @"0";
        xilieId = [self.xilie componentsJoinedByString:@","];
    }
    NSLog(@"classid -- %@",classId);
    NSLog(@"xilie -- %@",xilieId);
    [[ECRDataHandler sharedDataHandler] bmListDataWithSpecial:nil series:xilieId classify:classId length:self.requestLength page:self.requestPage sort:self.requestSort success:^(id object) {
        //        NSLog(@"bookarray -- %@",object);
        NSArray *arr = object;
        if (arr == nil || arr.count == 0) {
            [self.tableView.mj_footer endRefreshingWithNoMoreData];
        }else{
            [self.tableView.mj_footer endRefreshing];
        }
        [self.array addObjectsFromArray:arr];
        self.requestPage += arr.count;
        NSLog(@"page_more -- %ld",self.requestPage);
        [[NSOperationQueue mainQueue] addOperationWithBlock:^{
            [self.tableView reloadData];
        }];
        
    } failure:^(NSString *msg) {
        [self.tableView.mj_footer endRefreshing];
    } commenFailure:^(NSError *error) {
        [self.tableView.mj_footer endRefreshing];
    }];
    //    [self.tableView.mj_footer endRefreshing];// test
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self replaceTitleViewForSearch];// 设置搜索框
    [self setupUI];
    
}
- (void)setupUI{
    self.navigationController.view.backgroundColor = [UIColor clearColor];
    self.view.backgroundColor = [UIColor whiteColor];
    
    [self.view addSubview:self.closeButton];
    [self.view addSubview:self.tableView];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.view.mas_top);//.offset(7);
        make.left.equalTo(self.view.mas_left);
        make.right.equalTo(self.view.mas_right);
        make.bottom.equalTo(self.view.mas_bottom);
    }];
//    [self.closeButton mas_makeConstraints:^(MASConstraintMaker *make) {
//        make.top.equalTo(self.view.mas_top);//.offset(7);
//        make.left.equalTo(self.view.mas_left);
//        make.right.equalTo(self.view.mas_right);
//        make.bottom.equalTo(self.view.mas_bottom);
//    }];
    // MARK: MJRefresh
    self.tableView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreListData)];
    
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.tableView registerNib:[UINib nibWithNibName:reuserID bundle:nil] forCellReuseIdentifier:reuserID];
    [self.tableView registerNib:[UINib nibWithNibName:rHeadID bundle:nil] forHeaderFooterViewReuseIdentifier:rHeadID];
    
    self.tableView.estimatedRowHeight = 0;
    self.tableView.estimatedSectionHeaderHeight = 0;
    self.tableView.estimatedSectionFooterHeight = 0;
    
    self.tableView.hidden = YES;
    self.first = NO;
}
- (void)clickCloseButton:(UIButton *)sender{
    [self.stv endEditing:YES];
    [self baseViewControllerDismiss];
}

// 重写不实现
- (void)setNavRighSearchItem{
    
}
#pragma mark - ECRSearchTitleViewDelegate
- (void)stViewClose:(ECRSearchTitleView *)view{
    [self.stv endEditing:YES];
    [self baseViewControllerDismiss];
}
- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    [self.stv endEditing:YES];
}
//- (void)baseViewControllerDismiss{
//    [super baseViewControllerDismiss];
//}

//- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
//    return nil;
//}
//- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
//    return 0;
//}

- (UIButton *)closeButton{
    if (_closeButton == nil) {
        _closeButton = [[UIButton alloc] initWithFrame:self.view.bounds];
        [_closeButton setBackgroundColor:[UIColor blackColor]];
        _closeButton.alpha = 0.2;
        [_closeButton addTarget:self action:@selector(clickCloseButton:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _closeButton;
}


@end
