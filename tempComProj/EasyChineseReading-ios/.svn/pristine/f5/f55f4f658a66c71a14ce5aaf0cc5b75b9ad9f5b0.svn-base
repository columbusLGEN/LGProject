//
//  UserViewController.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/8/29.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UserViewController.h"

#import "UserCollectionHeaderView.h"
#import "UserCollectionViewCell.h"

#import "LoginVC.h"                 // 登录
#import "UserInfoVC.h"              // 用户信息
#import "UserMessageVC.h"           // 消息
#import "UserSetVC.h"               // 设置
#import "UserIntegralVC.h"          // 积分
#import "UserVirtualCurrencyVC.h"   // 虚拟币

#import "UserOrderVC.h"             // 我的订阅
#import "UserRechargeVC.h"          // 我的钱包
#import "UserFavouriteVC.h"         // 我的收藏
#import "UserFriendManagerVC.h"     // 我的好友
#import "UserClassVC.h"             // 班级管理
#import "UserTaskVC.h"              // 我的任务
#import "USecurityCenterVC.h"       // 安全中心
#import "UserHelpVC.h"              // 使用帮助
#import "UserTicketManager.h"       //

#import "UserInfoAddressVC.h"
#import "FirstLaunchCountryVC.h"

@interface UserViewController () <
UICollectionViewDelegate,
UICollectionViewDataSource,
UICollectionViewDelegateFlowLayout,
UserCollectionHeaderViewDelegate
>

@property (strong, nonatomic) UIImageView *imgNavigationBar;
@property (strong, nonatomic) UIImageView *imgMessage;
@property (strong, nonatomic) UIImageView *imgSet;
@property (strong, nonatomic) UILabel     *lblTitle;

@property (strong, nonatomic) UICollectionViewFlowLayout *layout;
@property (strong, nonatomic) UICollectionView *collectionView;

@property (strong, nonatomic) UserCollectionHeaderView *headerView;
@property (strong, nonatomic) UserCollectionViewCell   *cell;

// collection数据 跳转界面的数组
@property (strong, nonatomic) NSArray *arrControllers;

@end

static CGFloat const kCellPlace = 10.f; // 间隔

@implementation UserViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    self.navigationController.navigationBar.hidden = YES;
    [self registerNotification];
    [self registerCollection];
    [self configNavigationBar];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    [_collectionView reloadData];
}

- (void)updateSystemLanguage
{
    [_collectionView reloadData];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 配置界面

- (void)configNavigationBar
{
//    _imgNavigationBar = [[UIImageView alloc] initWithFrame:CGRectMake(0, -20, Screen_Width, cHeaderHeight_64)];
    _imgNavigationBar = [UIImageView new];
    _imgNavigationBar.image = [UIImage imageNamed:@"icon_home_nav_bg"];
    [self.view addSubview:_imgNavigationBar];
    
    _imgMessage = [UIImageView new];
    _imgMessage.image = [UIImage imageNamed:@"icon_user_message_white"];
    _imgMessage.contentMode = UIViewContentModeCenter;
    _imgMessage.userInteractionEnabled = YES;
    [self.view addSubview:_imgMessage];
    
    _imgSet = [UIImageView new];
    _imgSet.image = [UIImage imageNamed:@"icon_user_set_white"];
    _imgSet.contentMode = UIViewContentModeCenter;
    _imgSet.userInteractionEnabled = YES;
    [self.view addSubview:_imgSet];
    
    _lblTitle = [UILabel new];
    _lblTitle.textColor = [UIColor whiteColor];
    _lblTitle.font = [UIFont systemFontOfSize:cFontSize_16];
    _lblTitle.text = LOCALIZATION(@"我");
    [self.view addSubview:_lblTitle];
    
    [_imgNavigationBar mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.view.mas_left);
        make.right.mas_equalTo(self.view.mas_right);
        make.top.mas_equalTo(self.view.mas_top);
        make.height.mas_equalTo(cHeaderHeight_64);
    }];
    
    [_imgMessage mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(_imgNavigationBar.mas_left);
        make.bottom.mas_equalTo(_imgNavigationBar.mas_bottom);
        make.size.mas_equalTo(CGSizeMake(cHeaderHeight_44, cHeaderHeight_44));
    }];
    
    [_imgSet mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.mas_equalTo(_imgNavigationBar.mas_right);
        make.bottom.mas_equalTo(_imgNavigationBar.mas_bottom);
        make.size.mas_equalTo(CGSizeMake(cHeaderHeight_44, cHeaderHeight_44));
    }];
    
    [_lblTitle mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(_imgNavigationBar.mas_centerX);
        make.centerY.mas_equalTo(_imgMessage.mas_centerY);
    }];
    
    UITapGestureRecognizer *tap_message = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(toMessagesView)];
    [_imgMessage addGestureRecognizer:tap_message];
    
    UITapGestureRecognizer *tap_set = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(setting)];
    [_imgSet addGestureRecognizer:tap_set];
}

- (void)registerCollection
{
    [self.collectionView registerNib:[UINib nibWithNibName:NSStringFromClass([UserCollectionViewCell class]) bundle:nil] forCellWithReuseIdentifier:NSStringFromClass([UserCollectionViewCell class])];
    [self.collectionView registerNib:[UINib nibWithNibName:NSStringFromClass([UserCollectionHeaderView class]) bundle:nil] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:NSStringFromClass([UserCollectionHeaderView class])];
}

- (void)registerNotification
{
    // 登录
    [self fk_observeNotifcation:kNotificationUserLogin usingBlock:^(NSNotification *note) {
        [_collectionView reloadData];
    }];
    // 退出登录
    [self fk_observeNotifcation:kNotificationUserLogout usingBlock:^(NSNotification *note) {
        [_collectionView reloadData];
    }];
}

- (void)createNavLeftBackItem
{
    
}

#pragma mark - UICollectionViewDataSource

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.arrControllers.count;
}

- (__kindof UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    self.cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"UserCollectionViewCell" forIndexPath:indexPath];
    _cell.index = indexPath.row;
    _cell.data = _arrControllers[indexPath.row];
    return _cell;
}

#pragma mark - UICollectionViewDelegate

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath {
    self.headerView = (UserCollectionHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:NSStringFromClass([UserCollectionHeaderView class]) forIndexPath:indexPath];
    _headerView.delegate = self;
    _headerView.data = [UserRequest sharedInstance].user;
    return _headerView;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    if ([UserRequest sharedInstance].user) {    // 如果有用户信息（已登录） 则直接跳转界面
        if (0 == indexPath.row) {
            UserOrderVC *order = [UserOrderVC new];
            [self.navigationController pushViewController:order animated:YES];
        }
//        else if (2 == indexPath.row) {
//            UserTicketManager *ticket = [UserTicketManager new];
//            [self.navigationController pushViewController:ticket animated:YES];
//        }
        else if (4 == indexPath.row && ([UserRequest sharedInstance].user.userType == ENUM_UserTypeTeacher || [UserRequest sharedInstance].user.userType == ENUM_UserTypeOrganization)) {
            [self pushToViewControllerWithStoryBoard:@"UserClass" withStoryBoardId:NSStringFromClass([UserClassVC class])];
        }
        else
            [self pushToViewControllerWithIndex:indexPath.row];
    }
    else {  // 没有用户信息（没有登录）
        NSDictionary *dic = _arrControllers[indexPath.row];
        if ([dic[@"class"] isEqualToString:NSStringFromClass([UserHelpVC class])]) { // 帮助界面 直接跳转
            [self pushToViewControllerWithIndex:indexPath.row];
        }
        else { // 没有登录的话除帮助界面 均跳转登录界面 让先登录
            [self toLoginViewControll];
        }
    }
}

#pragma mark - UserCollectionHeaderViewDelegate

/** 更换头像 */
- (void)tapAvatar
{
    if ([[UserRequest sharedInstance] online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserInfoVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 登录或修改个人信息 */
- (void)tapLoginOrUserInfo
{
    if ([[UserRequest sharedInstance] online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserInfoVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 积分 */
- (void)tapIntegral
{
    if ([[UserRequest sharedInstance] online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserIntegralVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 虚拟币 */
- (void)tapVirtualCurrency
{
    if ([[UserRequest sharedInstance] online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserVirtualCurrencyVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 晒一晒 */
- (void)shareMyReadingInfomation
{
    if ([[UserRequest sharedInstance] online]) {
        if ([UserRequest sharedInstance].user.readTime > 0) {
            [[UserRequest sharedInstance] shareReadHistoryWithCompletion:^(id object, ErrorModel *error) {
                if (error) {
                    [self presentFailureTips:error.message];
                }
                else {
                    [self presentSuccessTips:@"分享成功"];
                }
            }];
        }
        else {
            [self alertCantShow];
        }
    }
    else {
        [self toLoginViewControll];
    }
}

- (void)alertCantShow
{
    ZAlertView *alert = [[ZAlertView alloc] initWithTitle:LOCALIZATION(@"没有数据可以分享, 请阅读后再来") message:nil delegate:self cancelButtonTitle:LOCALIZATION(@"确定") otherButtonTitles:nil, nil];
    [alert show];
}

#pragma mark - 界面跳转
/**
 设置
 */
- (void)setting
{
    if ([[UserRequest sharedInstance] online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserSetVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}

/**
 系统消息
 */
- (void)toMessagesView
{
    if ([[UserRequest sharedInstance] online]) {
        [self pushToViewControllerWithClassName:NSStringFromClass([UserMessageVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}

/**
 到登录界面
 */
- (void)toLoginViewControll
{
    [self pushToViewControllerWithClassName:NSStringFromClass([LoginVC class])];
}

/**
 界面跳转

 @param index arrViewControllers 中的位置
 */
- (void)pushToViewControllerWithIndex:(NSInteger)index
{
    NSDictionary *dic = [_arrControllers objectAtIndex:index];
    NSString *className = [dic objectForKey:@"class"];
    [self pushToViewControllerWithStoryBoard:@"User" withStoryBoardId:className];
}

/**
 跳转到在 User storyBoard 中的界面

 @param VCId   VC 的 StoryBoardId
 */
- (void)pushVCWithStoryBoardId:(NSString *)VCId
{
    [self pushToViewControllerWithStoryBoard:@"User" withStoryBoardId:VCId];
}

#pragma mark - 属性

- (UICollectionViewFlowLayout *)layout
{
    if (!_layout) {
        _layout = [[UICollectionViewFlowLayout alloc] init];
        _layout.minimumLineSpacing = 0;
        _layout.minimumInteritemSpacing = 0;
        _layout.sectionInset = isPad ? UIEdgeInsetsMake(0, 30, 0, 30) : UIEdgeInsetsMake(kCellPlace, kCellPlace, kCellPlace, kCellPlace);
        _layout.headerReferenceSize = CGSizeMake(Screen_Width, 500 + cHeaderHeight_64);
        
        CGFloat itemWidth = isPad ? (Screen_Width - 30 * 2)/4 : (Screen_Width - kCellPlace * 2) / 4;
        CGFloat itemHeight = itemWidth;
        
        itemHeight = [IPhoneVersion deviceSize] <= iPhone4inch ? itemHeight + 30 : itemHeight;
        itemHeight = isPad ? itemHeight - 30 : itemHeight;
        
        _layout.itemSize = CGSizeMake(itemWidth, itemHeight);
    }
    return _layout;
}

- (UICollectionView *)collectionView
{
    if (!_collectionView) {
        _collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, -20, Screen_Width, self.view.height - cHeaderHeight_64 + 20) collectionViewLayout:self.layout];
        _collectionView.backgroundColor = [UIColor whiteColor];
        _collectionView.showsVerticalScrollIndicator = NO;
        _collectionView.delegate = self;
        _collectionView.dataSource = self;
        [self.view addSubview:_collectionView];
    }
    return _collectionView;
}

- (NSArray *)arrControllers
{
    _arrControllers = @[@{@"class": NSStringFromClass([UserOrderVC class]),         @"title": LOCALIZATION(@"我的订阅"), @"image": @"icon_user_order"},
                        @{@"class": NSStringFromClass([UserFavouriteVC class]),     @"title": LOCALIZATION(@"我的收藏"), @"image": @"icon_user_favourite"},
                        @{@"class": NSStringFromClass([UserTicketManager class]),   @"title": LOCALIZATION(@"会员中心"), @"image": @"icon_user_wallet"},
                        @{@"class": NSStringFromClass([UserFriendManagerVC class]), @"title": LOCALIZATION(@"我的好友"), @"image": @"icon_user_friend"},
                        @{@"class": NSStringFromClass([UserClassVC class]),         @"title": LOCALIZATION(@"我的班级"), @"image": @"icon_user_class"},
                        @{@"class": NSStringFromClass([UserTaskVC class]),          @"title": LOCALIZATION(@"我的任务"), @"image": @"icon_user_task"},
                        @{@"class": NSStringFromClass([USecurityCenterVC class]),   @"title": LOCALIZATION(@"安全中心"), @"image": @"icon_user_safe"},
                        @{@"class": NSStringFromClass([UserHelpVC class]),          @"title": LOCALIZATION(@"使用帮助"), @"image": @"icon_user_help"},
                        ];
    if ([UserRequest sharedInstance].user.userType != ENUM_UserTypeTeacher && [UserRequest sharedInstance].user.userType != ENUM_UserTypeOrganization) {
        NSMutableArray *array = [NSMutableArray arrayWithArray:_arrControllers];
        [array removeObjectAtIndex:4];
        _arrControllers = [NSArray arrayWithArray:array];
    }
    
    return _arrControllers;
}

@end
