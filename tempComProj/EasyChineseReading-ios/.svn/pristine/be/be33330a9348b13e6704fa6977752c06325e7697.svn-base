//
//  UOrderListViewController.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/2.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UOrderListViewController.h"

#import "OrderRequest.h"

#import "UserOrderTableViewCell.h"
#import "UserOrderHeaderView.h"
#import "UserOrderFooterView.h"

#import "UOrderDetailVC.h"

@interface UOrderListViewController ()<UITableViewDelegate, UITableViewDataSource, UOrderFooterViewDelegate>

@property (strong, nonatomic) UITableView *tableView;
@property (strong, nonatomic) NSArray *arrDataSource;

@end

@implementation UOrderListViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [[OrderRequest sharedInstance] getOrderListWithPage:0 state:0 completion:^(NSArray * object, ErrorModel *error) {
        _arrDataSource = [OrderModel mj_objectArrayWithKeyValuesArray:object];
        [self.tableView reloadData];
    }];
    
    self.view.backgroundColor = [UIColor whiteColor];
    
    [self configTableView];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark -


- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, self.view.height - 64 - 64 - 44 + 20) style:UITableViewStyleGrouped];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.backgroundColor = [UIColor clearColor];
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView.showsVerticalScrollIndicator = NO;

    [self.view addSubview:_tableView];
    
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UserOrderTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UserOrderTableViewCell class])];
    
    // 自适应高度
    self.tableView.estimatedRowHeight = 10;
    self.tableView.rowHeight = UITableViewAutomaticDimension;
}

#pragma mark -
#pragma mark UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return _arrDataSource.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    OrderModel *order = _arrDataSource[section];
    return order.books.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UserOrderTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UserOrderTableViewCell class])];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    cell.index = indexPath.row;
    cell.data = _arrDataSource[indexPath.section];
    return cell;
}

#pragma mark -
#pragma mark UITableViewDelegate

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    OrderModel *order = _arrDataSource[section];
    UserOrderHeaderView *headerView = [UserOrderHeaderView loadFromNib];
    headerView.data = order;
    return headerView;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    OrderModel *order = _arrDataSource[section];
    UserOrderFooterView *footerView = [UserOrderFooterView loadFromNib];
    footerView.data = order;
    return footerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 30.f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    OrderModel *order = [OrderModel mj_objectWithKeyValues:_arrDataSource[section]];
    return order.state == ENUM_ZOrderStateDone ? 40 : 90;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self.tableView deselectRowAtIndexPath:indexPath animated:YES];
    UOrderDetailVC *detail = [[UOrderDetailVC alloc] init];
    detail.order = _arrDataSource[indexPath.section];
    [self.navigationController pushViewController:detail animated:YES];
}

#pragma mark -
#pragma mark UOrderFooterViewDelegate

- (void)cancelOrderWithOrderId:(NSString *)orderId
{
    
}
- (void)payOrderWithOrderId:(NSString *)orderId
{
    
}
- (void)evaluateWithOrderId:(NSString *)orderId
{
    
}

@end
