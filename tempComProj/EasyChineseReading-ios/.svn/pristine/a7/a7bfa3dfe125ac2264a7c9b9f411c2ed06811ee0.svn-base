//
//  UCRecommendVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/9/12.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UCRecommendListVC.h"

#import "UClassRecommendTableViewCell.h"
#import "UClassImpowerTableViewCell.h"

#import "UCRecommendDetailVC.h"

@interface UCRecommendListVC ()<
UITableViewDataSource, UITableViewDelegate
>

@property (strong, nonatomic) UITableView *tableView;

@property (strong, nonatomic) NSMutableArray *arrRecommendList;    // 推荐的数组
@property (strong, nonatomic) NSMutableArray *arrImpoverList;      // 授权数组

@property (assign, nonatomic) NSInteger currentRecommendListPage; // 推荐当前页
@property (assign, nonatomic) NSInteger currentImpowerListPage;   // 授权当前页

@end

@implementation UCRecommendListVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configView];
    if (_recommendType == ENUM_RecommendTypeRecommend) {
        _currentRecommendListPage = 0;
        [self getRecommendListWithPage:_currentRecommendListPage];
    }
    else {
        _currentImpowerListPage = 0;
        [self getImpowerListPage:_currentImpowerListPage];
    }
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 配置界面

- (void)configView
{
    [self configTableView];
}

- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height - cHeaderHeight_44 - cHeaderHeight_64) style:UITableViewStylePlain];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    _tableView.rowHeight = UITableViewAutomaticDimension;
    _tableView.estimatedRowHeight = 100;
    
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UClassRecommendTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UClassRecommendTableViewCell class])];
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UClassImpowerTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UClassImpowerTableViewCell class])];
    
    [self.view addSubview:_tableView];
}

#pragma mark - 获取数据

- (void)getRecommendListWithPage:(NSInteger)page
{
    [[ClassRequest sharedInstance] getRecommendListWithPage:page length:cListNumber_10 completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            _arrRecommendList = [RecommendModel mj_objectArrayWithKeyValuesArray:object];
            [_tableView reloadData];
        }
    }];
}

- (void)getImpowerListPage:(NSInteger)page
{
    [[ClassRequest sharedInstance] getImpowerListWithPage:page length:cListNumber_10 completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            _arrImpoverList = [ImpowerModel mj_objectArrayWithKeyValuesArray:object];
            [_tableView reloadData];
        }
    }];
}

#pragma mark -
#pragma mark UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _recommendType == ENUM_RecommendTypeRecommend ? _arrRecommendList.count : _arrImpoverList.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (_recommendType == ENUM_RecommendTypeRecommend) {
        UClassRecommendTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UClassRecommendTableViewCell class])];
        cell.data = _arrRecommendList[indexPath.row];
        return cell;
    }
    else {
        UClassImpowerTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UClassImpowerTableViewCell class])];
        cell.data = _arrImpoverList[indexPath.row];
        return cell;
    }
}

#pragma mark -
#pragma mark UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    UCRecommendDetailVC *detailVC = [[UCRecommendDetailVC alloc] init];
    
    detailVC.recommendType = _recommendType;
    detailVC.userType = [UserRequest sharedInstance].user.userType;
    
    detailVC.recommend = _arrRecommendList[indexPath.row];
    detailVC.impower   = _arrImpoverList[indexPath.row];
    
    [self.navigationController pushViewController:detailVC animated:YES];
}

@end
