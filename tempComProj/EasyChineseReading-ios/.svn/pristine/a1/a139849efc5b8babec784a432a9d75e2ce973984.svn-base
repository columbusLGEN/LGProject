//
//  UCRecommendBooksVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/9/14.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UCRecommendBooksVC.h"

#import "UCRBooksShopCarView.h"

#import "UCRecommendBooksTableViewCell.h"
#import "ECRBookListModel.h"

#import "UCRecommendStudentsVC.h"
#import "UCImpowerManagerVC.h"

@interface UCRecommendBooksVC ()<UCRBooksShopCarViewDelegate>

@property (nonatomic, strong) UCRBooksShopCarView *shopCarView; // 购物车（图书）
@property (nonatomic, strong) NSMutableArray *arrSelectedBooks; // 选中的图书

@end

@implementation UCRecommendBooksVC

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = _recommendType == ENUM_RecommendTypeRecommend ? @"推荐阅读" : @"授权阅读";
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 配置界面

- (void)setSubView
{
    _shopCarView = [[UCRBooksShopCarView alloc] initWithFrame:CGRectMake(0, Screen_Height - cHeaderHeight_54 - cHeaderHeight_64, CGRectGetWidth(self.view.bounds), cHeaderHeight_54) inView:self.view recommendType:_recommendType];
    _shopCarView.delegate = self;
    [self.view addSubview:_shopCarView];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(updateWithNotification:) name:kNotificationRemoveSelectedBook object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(removeAllSelectedBooks:) name:kNotificationRemoveAllBooks object:nil];
}

#pragma mark - 继承方法

//// 设置顶部搜索框
//- (void)replaceTitleViewForSearch
//{
//    
//}
//
//// 设置导航栏右侧搜索按钮
//- (void)setNavRighSearchItem
//{
//    
//}

#pragma mark 继承 tableView 代理方法
// 重写cell
- (UITableViewCell *)reTable:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UCRecommendBooksTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UCRecommendBooksTableViewCell class])];
    if (cell == nil) {
        [tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UCRecommendBooksTableViewCell class]) bundle:nil]
        forCellReuseIdentifier:NSStringFromClass([UCRecommendBooksTableViewCell class])];
        
        cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UCRecommendBooksTableViewCell class])];
    }
    
    cell.selectionStyle = UITableViewCellSeparatorStyleNone;
    if (self.array.count) {
        cell.data = self.array[indexPath.row];
    }
    return cell;
}

// 重写cell的选中方法
- (void)reTableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    UCRecommendBooksTableViewCell *cell = [tableView cellForRowAtIndexPath:indexPath];
    BookModel *book = self.array[indexPath.row];
    
    if ([self.arrSelectedBooks containsObject:book]) {
        cell.imgSelected.image = [UIImage imageNamed:@"2"];
//        book.isSelected = NO;
        [_arrSelectedBooks removeObject:book];
    }
    else {
        cell.imgSelected.image = [UIImage imageNamed:@"1"];
//        book.isSelected = YES;
        [_arrSelectedBooks addObject:book];
    }
    [self updateRecommendBooksView];
}

#pragma mark - UCRBooksShopCarViewDelegate

- (void)nextStep
{
    if (_recommendType == ENUM_RecommendTypeRecommend) {
        UCRecommendStudentsVC *recommendStudentVC = [[UCRecommendStudentsVC alloc] init];
        recommendStudentVC.arrBooks = _arrSelectedBooks;
        [self.navigationController pushViewController:recommendStudentVC animated:YES];
    }
    else {
        UCImpowerManagerVC *impowerManageVC = [[UCImpowerManagerVC alloc] init];
        impowerManageVC.arrBooks = _arrSelectedBooks;
        [self.navigationController pushViewController:impowerManageVC animated:YES];
    }
}

#pragma mark - 设置购物车动画

- (void)animationDidFinish
{
    [UIView animateWithDuration:0.1 animations:^{
        _shopCarView.btnShowSelectedBooks.transform = CGAffineTransformMakeScale(0.8, 0.8);
    } completion:^(BOOL finished) {
        [UIView animateWithDuration:0.1 animations:^{
            _shopCarView.btnShowSelectedBooks.transform = CGAffineTransformMakeScale(1, 1);
        } completion:^(BOOL finished) {
            
        }];
    }];
}

#pragma mark - 删除选中的书

- (void)updateWithNotification:(NSNotification *)notification
{
    if ([_arrSelectedBooks containsObject:notification.object]) {
        [_arrSelectedBooks removeObject:notification.object];
    }
    [self updateRecommendBooksView];
}

- (void)removeAllSelectedBooks:(NSNotification *)notification
{
    [_arrSelectedBooks removeAllObjects];
    [self updateRecommendBooksView];
}

#pragma mark - 更新购物车中的数据

- (void)updateRecommendBooksView {
    _shopCarView.bookSelectedView.objects = _arrSelectedBooks;
    //设置高度。
    [_shopCarView updateFrame:_shopCarView.bookSelectedView];
    [_shopCarView.bookSelectedView.tableView reloadData];
    //设置数量
    [_shopCarView setSelectedBooksNumber:_arrSelectedBooks.count];
    //重新设置数据源
    [self.tableView reloadData];
}

#pragma mark - 属性

- (NSMutableArray *)arrSelectedBooks
{
    if (_arrSelectedBooks == nil) {
        _arrSelectedBooks = [NSMutableArray array];
    }
    return _arrSelectedBooks;
}

@end
