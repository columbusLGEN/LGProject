(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("GREN"));
	else if(typeof define === 'function' && define.amd)
		define("ART", ["GREN"], factory);
	else if(typeof exports === 'object')
		exports["ART"] = factory(require("GREN"));
	else
		root["ART"] = factory(root["GREN"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	/**
	 * Created by grenlight on 16/4/27.
	 *
	 * 将 http://codegolf.stackexchange.com/questions/35569/tweetable-mathematical-art 上的代码移值到 ELSL
	 */

	var GREN = __webpack_require__(1);

	var pixelShader = '\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise1(float x) {\n    return 0.23;\n}\n\nfloat k = 0.0;\nfloat k1 = 0.0;\nfloat k2 = 0.0;\n\nfloat RD(float i,float j){\n     k+=rand(vec2(i, j))/rand(vec2(j, i));\n     return mod(k,255.0);\n}\n \nfloat GR(float i,float j){\n      k1+=rand(vec2(i, j))/rand(vec2(j, i));\n      return mod(k1,255.0);\n}\n \nfloat BL(float i,float j){\n     k2+=rand(vec2(i, j))/rand(vec2(j, i));\n     return mod(k2,255.0);\n}\n\nvoid main(void) {\n    float x = gl_FragCoord.x;\n    float y = gl_FragCoord.y;\n  \n    gl_FragColor = vec4( RD(x, y), GR(x, y), BL(x, y), 1.0);\n}\n    ';

	var MathematicalArt = exports.MathematicalArt = function () {
	    function MathematicalArt() {
	        var width = arguments.length <= 0 || arguments[0] === undefined ? 300 : arguments[0];
	        var height = arguments.length <= 1 || arguments[1] === undefined ? 100 : arguments[1];

	        _classCallCheck(this, MathematicalArt);

	        this.renderer = new GREN.WebGLRenderer();
	        this.renderer.setStyle(width, height, 'margin:0px;');
	        this.gl = this.renderer.gl;

	        this.domElement = this.renderer.canvas;

	        if (this.renderer.isWebGLSuported === false) {
	            return;
	        }

	        var w = this.renderer.canvasWidth;
	        var h = this.renderer.canvasHeight;

	        this.mvMatrix = GREN.Matrix4.identity();
	        this.pMatrix = GREN.Matrix4.orthogonal(0, w, 0, h, 5000, -5000);

	        this._initProgram();

	        var vertices = new Float32Array([0, 0, 0, 0, h, 0, w, h, 0, w, 0, 0]);
	        var vertexBuffer = this.gl.createArrayBufferWithTypedArray(vertices);
	        this.gl.enableVertexAttribArray(this.prg.vertexPosition);
	        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertexBuffer);

	        this.indices = new Uint16Array([0, 1, 2, 0, 2, 3]);
	        this.indexBuffer = this.gl.createElementBufferWithTypedArray(this.indices);

	        this.enterFrame();
	    }

	    /**
	     *  初始化着色器
	     */


	    _createClass(MathematicalArt, [{
	        key: '_initProgram',
	        value: function _initProgram() {
	            this.prg = this.gl.makeProgram(GREN.commonVS, pixelShader);
	            if (this.prg) {
	                this.prg.setAttribLocations(['vertexPosition']);
	                this.prg.setUniformLocations(['pMatrix', 'mvMatrix']);

	                this.gl.uniformMatrix4fv(this.prg.pMatrix, false, this.pMatrix);
	                this.gl.uniformMatrix4fv(this.prg.mvMatrix, false, this.mvMatrix);
	            }
	        }
	    }, {
	        key: 'enterFrame',
	        value: function enterFrame() {
	            // 先设置 clearColor, 后 clear
	            this.gl.clearColor(0.25, 0.25, 0.25, 1.0);
	            this.gl.viewport(0, 0, this.renderer.canvasWidth, this.renderer.canvasHeight);
	            this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);

	            //这个地方要写在bind后,相当于获取并设置顶点数据
	            this.gl.vertexAttribPointer(this.prg.vertexPosition, 3, this.gl.FLOAT, false, 0, 0);

	            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
	            this.gl.drawElements(this.gl.TRIANGLES, this.indices.length, this.gl.UNSIGNED_SHORT, 0);
	        }
	    }]);

	    return MathematicalArt;
	}();

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }
/******/ ])
});
;