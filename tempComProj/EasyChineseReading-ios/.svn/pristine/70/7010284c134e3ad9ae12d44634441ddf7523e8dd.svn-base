//
//  UCTeacherMangerVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/10/11.
//  Copyright © 2017年 retech. All rights reserved.
//

#import "UCTeacherAddVC.h"

@interface UCTeacherAddVC () <
ZPickViewDelegate
>

@property (weak, nonatomic) IBOutlet UILabel *lblDescName;
@property (weak, nonatomic) IBOutlet UILabel *lblDescSex;
@property (weak, nonatomic) IBOutlet UILabel *lblDescAge;
@property (weak, nonatomic) IBOutlet UILabel *lblDescAccount;
@property (weak, nonatomic) IBOutlet UILabel *lblDescPassword;
@property (weak, nonatomic) IBOutlet UILabel *lblDescRePassword;
@property (weak, nonatomic) IBOutlet UILabel *lblDescRemark;

@property (weak, nonatomic) IBOutlet UILabel *lblSex;

@property (weak, nonatomic) IBOutlet UITextField *txtfName;
@property (weak, nonatomic) IBOutlet UITextField *txtfAge;
@property (weak, nonatomic) IBOutlet UITextField *txtfAccount;
@property (weak, nonatomic) IBOutlet UITextField *txtfPassword;
@property (weak, nonatomic) IBOutlet UITextField *txtfRePassword;
@property (weak, nonatomic) IBOutlet UITextField *txtfRemark;

@property (strong, nonatomic) ZPickView *pickViewSex; // 性别选择器

@property (strong, nonatomic) NSArray *arrSex;             // 性别数组
@property (strong, nonatomic) NSMutableArray *arrTeachers; // 教师数组

@property (assign, nonatomic) NSInteger sex; // 性别
@property (assign, nonatomic) ENUM_AccountType accountType; // 账号类型


@end

@implementation UCTeacherAddVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self configView];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark -
#pragma mark UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (1 == indexPath.row) {
        [self configPickViewSex];
    }
}

#pragma mark -
#pragma mark action

- (void)configView
{
    [self configNavigationBar];
    [self configTableView];
}

- (void)configNavigationBar
{
    self.title = @"创建教师";
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"创建" style:UIBarButtonItemStylePlain target:self action:@selector(checkTeacherInfo)];
}

- (void)configTableView
{
    _lblDescName.textColor = [UIColor cm_blackColor_333333_1];
    _lblDescSex.textColor = [UIColor cm_blackColor_333333_1];
    _lblDescAge.textColor = [UIColor cm_blackColor_333333_1];
    _lblDescAccount.textColor = [UIColor cm_blackColor_333333_1];
    _lblDescPassword.textColor = [UIColor cm_blackColor_333333_1];
    _lblDescRePassword.textColor = [UIColor cm_blackColor_333333_1];
    _lblDescRemark.textColor = [UIColor cm_blackColor_333333_1];

    
    _lblDescName.font = [UIFont systemFontOfSize:15.f];
    _lblDescSex.font = [UIFont systemFontOfSize:15.f];
    _lblDescAge.font = [UIFont systemFontOfSize:15.f];
    _lblDescAccount.font = [UIFont systemFontOfSize:15.f];
    _lblDescPassword.font = [UIFont systemFontOfSize:15.f];
    _lblDescRePassword.font = [UIFont systemFontOfSize:15.f];
    _lblDescRemark.font = [UIFont systemFontOfSize:15.f];
    
    _txtfName.textColor = [UIColor cm_blackColor_333333_1];
    _txtfAge.textColor = [UIColor cm_blackColor_333333_1];
    _txtfAccount.textColor = [UIColor cm_blackColor_333333_1];
    _txtfPassword.textColor = [UIColor cm_blackColor_333333_1];
    _txtfRePassword.textColor = [UIColor cm_blackColor_333333_1];
    _txtfRemark.textColor = [UIColor cm_blackColor_333333_1];
}

#pragma mark - 保存教师信息

- (void)checkTeacherInfo
{
    // 手机号检查
    if ([NSString isEmpty:_txtfAccount.text]) {
        [self presentFailureTips:@"姓名不能为空"];
        return;
    }
    
    if ([NSString isEmpty:_txtfName.text]) {
        [self presentFailureTips:@"账号不能为空"];
        return;
    }
    
    // 密码检查
    if ([NSString isEmpty:_txtfPassword.text]) {
        [self presentFailureTips:@"密码不能为空"];
        return;
    }
    if ([NSString isEmpty:_txtfRePassword.text]) {
        [self presentFailureTips:@"确认密码不能为空"];
        return;
    }
    if (_txtfPassword.text.length > cMaxPasswordLength || _txtfPassword.text.length < cMinPasswordLength) {
        [self presentFailureTips:@"密码长度为6-16"];
        return;
    }
    if (![_txtfPassword.text isEqualToString:_txtfRePassword.text]) {
        [self presentFailureTips:@"两次输入的密码不一样，请确认后重新输入"];
        return;
    }
    
    if ([_txtfAccount.text isEmail]) {
        _accountType = ENUM_AccountTypeEmail;
    }
    else if ([_txtfAccount.text isPhone]) {
        _accountType = ENUM_AccountTypePhone;
    }
    else {
        [self presentFailureTips:@"账号类型错误，账号为手机/邮箱号"];
        return;
    }
    
    [self saveTeacherInfo];
}

- (void)saveTeacherInfo
{
    [[ClassRequest sharedInstance] addTeacherInfoWithUserName:_txtfAccount.text
                                                     userType:_accountType
                                                     password:_txtfPassword.text
                                                         name:_txtfName.text
                                                          sex:_sex
                                                          age:_txtfAge.text
                                                       remark:_txtfRemark.text
                                                   completion:^(id object, ErrorModel *error) {
                                                       if (error) {
                                                           [self presentFailureTips:error.message];
                                                       }
                                                       else {
                                                           // 获取教师列表
                                                           _arrTeachers = [[CacheDataSource sharedInstance] loadCacheWithCacheKey:CacheKey_TeacherList];
                                                       
                                                           UserModel *teacher = [UserModel new];
                                                           NSArray *teacherIds = [NSDictionary mj_objectArrayWithKeyValuesArray:object];
                                                           teacher.userId = [[teacherIds firstObject][@"teacherId"] integerValue];
                                                           
                                                           if (_accountType == ENUM_AccountTypeEmail) {
                                                               teacher.email = _txtfAccount.text;
                                                           }
                                                           else {
                                                               teacher.phone = _txtfAccount.text;
                                                           }
                                                           teacher.organizationId = [UserRequest sharedInstance].user.userId;
                                                           teacher.name = _txtfName.text;
                                                           teacher.sex = _sex;
                                                           teacher.age = [_txtfAge.text integerValue];
                                                           teacher.remark = _txtfRemark.text;
                                                           
                                                           // 加入教师列表
                                                           [_arrTeachers addObject:teacher];
                                                           
                                                           // 保存教师信息
                                                           [[CacheDataSource sharedInstance] setCache:_arrTeachers withCacheKey:CacheKey_TeacherList];
                                                           self.addTeacherSuccess();
                                                           [self.navigationController popViewControllerAnimated:YES];
                                                       }
                                                     }];
}

/**
 性别选择
 */
- (void)configPickViewSex
{
    if (_pickViewSex == nil) {
        _pickViewSex = [[ZPickView alloc] initWithFrame:self.view.bounds dataSource:self.arrSex selected:0];
        _pickViewSex.delegates = self;
        [self.view addSubview:_pickViewSex];
    }
    [_pickViewSex show];
}

#pragma mark - ZPickViewDelegate

- (void)ZPickerViewCancel:(ZPickView *)picker
{
    [picker hidden];
}

- (void)ZPickerView:(ZPickView *)picker makeSureIndex:(NSInteger)index
{
    _lblSex.text = _arrSex[index];
    _sex = index;
    [picker hidden];
}

#pragma mark - 属性

- (NSArray *)arrSex
{
    if (_arrSex == nil) {
        _arrSex = @[@"男", @"女"];
    }
    return _arrSex;
}

@end
