//
//  ECRBookrackCollectionViewCell.m
//  EasyChineseReading-ios
//
//  Created by lee on 2017/9/5.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "ECRBookrackCollectionViewCell.h"
#import "ECRBookrackModel.h"
#import "ECRBookDownloadStateView.h"

@interface ECRBookrackCollectionViewCell ()
@property (weak, nonatomic) IBOutlet UIImageView *iconUrl;
@property (weak, nonatomic) IBOutlet UILabel *bfName;// book or file

@property (weak, nonatomic) IBOutlet UIView *fileCoverView;// 文件夹封面view
@property (strong,nonatomic) NSMutableArray *fileImageViews;
@property (weak, nonatomic) IBOutlet UIView *bgBorderView;

// temporary
@property (strong,nonatomic) UIImageView *first;
@property (strong,nonatomic) UIImageView *second;
@property (strong,nonatomic) UIImageView *third;
@property (strong,nonatomic) UIImageView *forth;
@property (weak, nonatomic) IBOutlet UIButton *seBtn;
@property (weak, nonatomic) IBOutlet UIButton *didSelectedBtn;

@end

@implementation ECRBookrackCollectionViewCell

- (void)setModel:(ECRBookrackModel *)model{
//    NSLog(@"model.isedit -- %d",model.isEditState);
    _model = model;
    _bfName.text = model.name;
    
    // 下载状态
    self.bdsView.model = model.dsModel;
    
    if (model.groupId == 0) {// 单本书
        _fileCoverView.hidden = YES;
        self.iconUrl.hidden = NO;
        [self.iconUrl sd_setImageWithURL:[NSURL URLWithString:model.bookPic]
                           placeholderImage:nil];
        self.iconUrl.clipsToBounds = YES;
    }else{
        [self setFileCover];
    }
    if (model.books.count) {// 文件夹 不显示 选择按钮
        self.seBtn.hidden = YES;
        self.didSelectedBtn.hidden = YES;
        self.bdsView.hidden = YES;// 文件夹不显示 下载状态view
    }else{
        self.seBtn.selected = model.isSelected;
        self.seBtn.hidden = !model.isEditState;
        self.didSelectedBtn.hidden = !model.isEditState;
        self.bdsView.hidden = model.isEditState;
    }
}

- (IBAction)editStateDidClick:(UIButton *)sender {
    // 编辑状态下 模型的选中状态切换
    if (self.model.isSelected) {
        self.model.isSelected = NO;
    }else{
        self.model.isSelected = YES;
    }
    if ([self.delegate respondsToSelector:@selector(brCellBookEditDidClick:inx:model:)]) {
        [self.delegate brCellBookEditDidClick:self inx:self.inx model:self.model];
    }
}

- (void)setFileCover{
    _fileImageViews = [NSMutableArray arrayWithCapacity:10];
    _fileCoverView.hidden = NO;
    self.iconUrl.hidden = YES;
    [_model.books enumerateObjectsUsingBlock:^(ECRBookrackModel * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
        [self setNeedsLayout];
        [self layoutIfNeeded];
        __block CGFloat margin = 5;
        __block CGFloat imgW = (_fileCoverView.width - 3 * margin) / 2;
        __block CGFloat imgH = (_fileCoverView.height - 3 * margin) / 2;
        switch (idx) {// 以后再优化代码
            case 0:{
                [self.first sd_setImageWithURL:[NSURL URLWithString:obj.bookPic] placeholderImage:nil];
                [self.first mas_makeConstraints:^(MASConstraintMaker *make) {
                    make.left.equalTo(_fileCoverView.mas_left).offset(margin);
                    make.top.equalTo(_fileCoverView.mas_top).offset(margin);
                    make.width.equalTo(@(imgW));
                    make.height.equalTo(@(imgH));
                }];
            }
                
                break;
            case 1:{
                [self.second sd_setImageWithURL:[NSURL URLWithString:obj.bookPic] placeholderImage:nil];
                [self.second mas_makeConstraints:^(MASConstraintMaker *make) {
                    make.left.equalTo(_fileCoverView.mas_left).offset(imgW + 2 * margin);
                    make.top.equalTo(_fileCoverView.mas_top).offset(margin);
                    make.width.equalTo(@(imgW));
                    make.height.equalTo(@(imgH));
                }];
            }
                
                break;
            case 2:{
                [self.third sd_setImageWithURL:[NSURL URLWithString:obj.bookPic] placeholderImage:nil];

                [self.third mas_makeConstraints:^(MASConstraintMaker *make) {
                    make.left.equalTo(_fileCoverView.mas_left).offset(margin);
                    make.top.equalTo(_fileCoverView.mas_top).offset(imgH + 2 * margin);
                    make.width.equalTo(@(imgW));
                    make.height.equalTo(@(imgH));
                }];
            }
                
                break;
            case 3:{
                [self.forth sd_setImageWithURL:[NSURL URLWithString:obj.bookPic] placeholderImage:nil];

                [self.forth mas_makeConstraints:^(MASConstraintMaker *make) {
                    make.left.equalTo(_fileCoverView.mas_left).offset(imgW + 2 * margin);
                    make.top.equalTo(_fileCoverView.mas_top).offset(imgH + 2 * margin);
                    make.width.equalTo(@(imgW));
                    make.height.equalTo(@(imgH));
                }];
            }
                
                break;
        }
        
    }];
}

- (void)awakeFromNib{
    [super awakeFromNib];
//    self.didSelectedBtn.backgroundColor = [UIColor redColor];
//    self.didSelectedBtn.alpha = 0.2;
    
    UIColor *borderColor0 = [UIColor colorWithHexString:@"cccccc"];
    UIColor *borderColor1 = [UIColor colorWithHexString:@"e3e3e3"];
    _fileCoverView.layer.borderWidth = 1;
    _fileCoverView.layer.borderColor = borderColor0.CGColor;
    _bgBorderView.layer.borderWidth = 1;
    _bgBorderView.layer.borderColor = borderColor1.CGColor;
    
    self.iconUrl.clipsToBounds = YES;
    self.iconUrl.contentMode = UIViewContentModeScaleAspectFill;
    self.clipsToBounds = NO;
    
    self.seBtn.selected = YES;
}

- (UIImageView *)first{
    if (_first == nil) {
        _first = [[UIImageView alloc] init];
        _first.contentMode = UIViewContentModeScaleAspectFill;
        _first.clipsToBounds = YES;
        [_fileCoverView addSubview:_first];
    }
    return _first;
}
- (UIImageView *)second{
    if (_second == nil) {
        _second = [[UIImageView alloc] init];
        _second.contentMode = UIViewContentModeScaleAspectFill;
        _second.clipsToBounds = YES;
        [_fileCoverView addSubview:_second];
    }
    return _second;
}
- (UIImageView *)third{
    if (_third == nil) {
        _third = [[UIImageView alloc] init];
        _third.contentMode = UIViewContentModeScaleAspectFill;
        _third.clipsToBounds = YES;
        [_fileCoverView addSubview:_third];
    }
    return _third;
}
- (UIImageView *)forth{
    if (_forth == nil) {
        _forth = [[UIImageView alloc] init];
        _forth.contentMode = UIViewContentModeScaleAspectFill;
        _forth.clipsToBounds = YES;
        [_fileCoverView addSubview:_forth];
    }
    return _forth;
}

@end



