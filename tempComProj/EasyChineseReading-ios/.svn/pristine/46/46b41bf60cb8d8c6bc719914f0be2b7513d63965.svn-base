//
//  UFriendInfoVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/1.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UFriendInfoVC.h"

#import "UFriendInfoCollectionViewCell.h"
#import "UFriendInfoHeaderView.h"

#import "UFriendChatVC.h"
#import "ECRBookInfoViewController.h"

static CGFloat const kCollectionCellW = 80.f;
static CGFloat const kCollectionCellH = 120.f;
static CGFloat const kCollectionSectionInset = 10.f;
static CGFloat const kCollectionHeaderH = 320.f;

@interface UFriendInfoVC ()<UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>

@property (strong, nonatomic) IBOutlet UICollectionView *collectionView;
@property (strong, nonatomic) UICollectionViewFlowLayout *layout;

@property (strong, nonatomic) IBOutlet UILabel *lblChat;            // 私信
@property (strong, nonatomic) UFriendInfoHeaderView *collectionHeaderView;    // 好友信息

@property (strong, nonatomic) UIView *headerView;

@property (assign, nonatomic) NSInteger kCollectionCellNumber;

@end

@implementation UFriendInfoVC

- (void)viewDidLoad {
    [super viewDidLoad];
    _kCollectionCellNumber = isPad ? 6 : 4;
    [self configChatView];
    [self registerCollection];
    [self getFriendsData];
//    [self configHeaderView];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
//    [self.navigationController setNavigationBarHidden:YES animated:YES];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 配置界面

- (void)updateSystemLanguage
{
    self.title = LOCALIZATION(@"好友信息");
    [_collectionView reloadData];
}

- (void)configChatView
{
    _lblChat.backgroundColor = [UIColor cm_mainColor];
    _lblChat.textColor = [UIColor whiteColor];
    UITapGestureRecognizer *tapChat = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(toChatVC)];
    [_lblChat addGestureRecognizer:tapChat];
    // 暂时取消好友私信, 隐藏私信入口, 取消私信操作
    _lblChat.hidden = YES;
}

- (void)configHeaderView
{
    _headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, cHeaderHeight_64)];
    _headerView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:_headerView];
    
    UIImageView *imgMask = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, cHeaderHeight_44)];
    imgMask.image = [UIImage imageNamed:@"icon_home_nav_bg"];
    [_headerView addSubview:imgMask];
    
    UIImageView *imgBack = [[UIImageView alloc] initWithFrame:CGRectMake(0, 20, cHeaderHeight_44, cHeaderHeight_44)];
    imgBack.image = [UIImage imageNamed:@"icon_arrow_left_white"];
    imgBack.contentMode = UIViewContentModeCenter;
    imgBack.userInteractionEnabled = YES;
    [_headerView addSubview:imgBack];
    
    UILabel *lblTitle = [[UILabel alloc] init];
    lblTitle.frame = CGRectMake(Screen_Width/2 - [NSString stringWidthWithText:LOCALIZATION(@"我的好友") fontSize:cFontSize_16]/2, 20, [NSString stringWidthWithText:LOCALIZATION(@"我的好友") fontSize:cFontSize_18], cHeaderHeight_44);
    lblTitle.text = LOCALIZATION(@"我的好友");
    lblTitle.backgroundColor = [UIColor whiteColor];
    lblTitle.textColor = [UIColor cm_blackColor_333333_1];
    lblTitle.textAlignment = NSTextAlignmentCenter;
    lblTitle.font = [UIFont boldSystemFontOfSize:cFontSize_18];
    [_headerView addSubview:lblTitle];
    
    UIView *viewBotLine = [[UIView alloc] initWithFrame:CGRectMake(0, cHeaderHeight_64 - 1, Screen_Width, .5f)];
    viewBotLine.backgroundColor = [UIColor cm_lineColor_D9D7D7_1];
    [_headerView addSubview:viewBotLine];

    UITapGestureRecognizer *tapB = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tapBack)];
    [imgBack addGestureRecognizer:tapB];
}

- (void)registerCollection
{
    _collectionView.backgroundColor = [UIColor whiteColor];
    [self.collectionView registerNib:[UINib nibWithNibName:NSStringFromClass([UFriendInfoCollectionViewCell class]) bundle:nil] forCellWithReuseIdentifier:NSStringFromClass([UFriendInfoCollectionViewCell class])];
    [self.collectionView registerNib:[UINib nibWithNibName:NSStringFromClass([UFriendInfoHeaderView class]) bundle:nil] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:NSStringFromClass([UFriendInfoHeaderView class])];
    self.collectionView.collectionViewLayout = self.layout;
}

#pragma mark - 获取好友信息

- (void)getFriendsData
{
    [self showWaitTips];
    [[FriendRequest sharedInstance] getFriendReadHistoryWithFriendId:[NSString stringWithFormat:@"%ld", _friendInfo.userId] completion:^(id object, ErrorModel *error) {
        [self dismissTips];
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            NSArray *array = [NSDictionary mj_objectArrayWithKeyValuesArray:object];
            _friendInfo.readBook = [BookModel mj_objectArrayWithKeyValuesArray:array.firstObject[@"readBook"]];
            _friendInfo.readHistory = [ReadHistoryModel mj_objectArrayWithKeyValuesArray:array.firstObject[@"readHistory"]];
            _friendInfo.canview = [array.firstObject[@"canview"] integerValue];
            
            [_collectionView reloadData];
        }
    }];
}

#pragma mark - UICollectionViewDataSource

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return _friendInfo.canview ? (_friendInfo.readBook.count > _kCollectionCellNumber ? _kCollectionCellNumber : _friendInfo.readBook.count) : 0;
}

- (__kindof UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    UFriendInfoCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"UFriendInfoCollectionViewCell" forIndexPath:indexPath];
    cell.data = _friendInfo.readBook[indexPath.row];
    return cell;
}

#pragma mark - UICollectionViewDelegate

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath {
    self.collectionHeaderView = (UFriendInfoHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:NSStringFromClass([UFriendInfoHeaderView class]) forIndexPath:indexPath];
    _collectionHeaderView.data = _friendInfo;
    return _collectionHeaderView;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    [self pushToViewControllerWithIndex:indexPath.row];
}

#pragma mark - action

- (void)toChatVC
{
    UFriendChatVC *chatVC = [UFriendChatVC loadFromStoryBoard:@"User"];
    chatVC.userId = _friendInfo.userId;
    [self.navigationController pushViewController:chatVC animated:YES];
}

- (void)pushToViewControllerWithIndex:(NSInteger)index
{
    BookModel *book = _friendInfo.readBook[index];
    // 进入详情页面
    UIStoryboard *board = [UIStoryboard storyboardWithName:@"BookInfo" bundle:nil];
    ECRBookInfoViewController *bivc = [board instantiateViewControllerWithIdentifier:@"ECRBookInfoViewController"];
    bivc.viewControllerPushWay = ECRBaseControllerPushWayPush;
    bivc.bookId = book.bookId;
    [self.navigationController pushViewController:bivc animated:YES];
}

- (void)tapBack
{
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - 属性

- (UICollectionViewFlowLayout *)layout
{
    if (!_layout) {
        _layout = [[UICollectionViewFlowLayout alloc] init];
        _layout.minimumLineSpacing = kCollectionSectionInset;
        _layout.minimumInteritemSpacing = (Screen_Width - kCollectionSectionInset*2 - kCollectionCellW*_kCollectionCellNumber)/(_kCollectionCellNumber - 1);
        _layout.itemSize = CGSizeMake(kCollectionCellW, kCollectionCellH);
        _layout.sectionInset = UIEdgeInsetsMake(kCollectionSectionInset, kCollectionSectionInset, kCollectionSectionInset, kCollectionSectionInset);
        _layout.headerReferenceSize = CGSizeMake(Screen_Width, kCollectionHeaderH);
    }
    return _layout;
}

@end
