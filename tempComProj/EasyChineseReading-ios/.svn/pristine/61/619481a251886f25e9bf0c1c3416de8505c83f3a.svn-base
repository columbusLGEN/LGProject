//
//  UserViewController.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/8/29.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UserViewController.h"

#import "UserCollectionHeaderView.h"
#import "UserCollectionViewCell.h"

#import "LoginVC.h"                 // 登录
#import "UserInfoVC.h"              // 用户信息
#import "UserMessageManagerVC.h"    // 消息
#import "UserSetVC.h"               // 设置
#import "UserIntegralVC.h"          // 积分
#import "UserVirtualCurrencyVC.h"   // 虚拟币

#import "UserOrderVC.h"             // 我的订阅
#import "UserRechargeVC.h"          // 我的钱包
#import "UserFavouriteVC.h"         // 我的收藏
#import "UserFriendManagerVC.h"     // 我的好友
#import "UserClassVC.h"             // 班级管理
#import "UserTaskVC.h"              // 我的任务
#import "USecurityCenterVC.h"       // 安全中心
#import "UserHelpVC.h"              // 使用帮助

#import "UserInfoAddressVC.h"

@interface UserViewController () <
UICollectionViewDelegate,
UICollectionViewDataSource,
UICollectionViewDelegateFlowLayout,
UserCollectionHeaderViewDelegate>

@property (strong, nonatomic) UICollectionViewFlowLayout *layout;
@property (strong, nonatomic) UICollectionView *collectionView;

@property (strong, nonatomic) UserCollectionViewCell *cell;
@property (strong, nonatomic) UserCollectionHeaderView *headerView;

// collection数据 跳转界面的数组
@property (strong, nonatomic) NSArray *arrControllers;

// 用户信息
@property (nonatomic, strong) UserRequest *userRequest;

@end

static CGFloat const kCellPlace = 10.f; // 间隔

@implementation UserViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];

    [self configNavigationBar];
    [self registerCollection];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    _userRequest = [UserRequest sharedInstance];
    [self.collectionView reloadData];
}

#pragma mark - 配置界面

- (void)configNavigationBar
{
    self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"person17"] style:UIBarButtonItemStylePlain target:self action:@selector(setting)];
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"person18"] style:UIBarButtonItemStylePlain target:self action:@selector(viewMessage)];
    self.navigationController.navigationBar.tintColor = [UIColor cm_blackColor_333333_1];
}

- (void)registerCollection
{
    [self.collectionView registerNib:[UINib nibWithNibName:NSStringFromClass([UserCollectionViewCell class]) bundle:nil] forCellWithReuseIdentifier:NSStringFromClass([UserCollectionViewCell class])];
    [self.collectionView registerNib:[UINib nibWithNibName:NSStringFromClass([UserCollectionHeaderView class]) bundle:nil] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:NSStringFromClass([UserCollectionHeaderView class])];
}

- (void)createNavLeftBackItem
{
    // 重写父类方法 取消左侧返回按钮button
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - UICollectionViewDataSource

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.arrControllers.count;
}

- (__kindof UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    self.cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"UserCollectionViewCell" forIndexPath:indexPath];
    _cell.data = _arrControllers[indexPath.row];
    return _cell;
}

#pragma mark - UICollectionViewDelegate

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath {
    self.headerView = (UserCollectionHeaderView *)[collectionView dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:NSStringFromClass([UserCollectionHeaderView class]) forIndexPath:indexPath];
    _headerView.delegate = self;
    _headerView.data = _userRequest.user;
    return _headerView;
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (_userRequest.user) {    // 如果有用户信息（已登录） 则直接跳转界面
        if (0 == indexPath.row) {
            UserOrderVC *order = [UserOrderVC new];
            [self.navigationController pushViewController:order animated:YES];
        }
        else if (4 == indexPath.row && (_userRequest.user.userType == ENUM_UserTypeTeacher || _userRequest.user.userType == ENUM_UserTypeOrganization)) {
            [self pushToViewControllerWithStoryBoard:@"UserClass" withStoryBoardId:NSStringFromClass([UserClassVC class])];
        }
        else
            [self pushToViewControllerWithIndex:indexPath.row];
    }
    else {  // 没有用户信息（没有登录）
        NSDictionary *dic = _arrControllers[indexPath.row];
        if ([dic[@"class"] isEqualToString:NSStringFromClass([UserHelpVC class])]) { // 帮助界面 直接跳转
            [self pushToViewControllerWithIndex:indexPath.row];
        }
        else { // 没有登录的话除帮助界面 均跳转登录界面 让先登录
            [self toLoginViewControll];
        }
    }
}

#pragma mark - UserCollectionHeaderViewDelegate
/** 更换头像 */
- (void)tapAvatar
{
    if ([_userRequest online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserInfoVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 登录或修改个人信息 */
- (void)tapLoginOrUserInfo
{
    if ([_userRequest online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserInfoVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 积分 */
- (void)tapIntegral
{
    if ([_userRequest online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserIntegralVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 虚拟币 */
- (void)tapVirtualCurrency
{
    if ([_userRequest online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserVirtualCurrencyVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}
/** 晒一晒 */
- (void)shareMyReadingInfomation
{
    if ([_userRequest online]) {
        [[UserRequest sharedInstance] shareReadHistoryWithCompletion:^(id object, ErrorModel *error) {
            if (error) {
                [self presentFailureTips:error.message];
            }
            else {
                [self presentSuccessTips:@"分享成功"];
            }
        }];
    }
    else {
        [self toLoginViewControll];
    }
}

#pragma mark - 界面跳转
/**
 设置
 */
- (void)setting
{
    if ([_userRequest online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserSetVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}

/**
 系统消息
 */
- (void)viewMessage
{
    if ([_userRequest online]) {
        [self pushVCWithStoryBoardId:NSStringFromClass([UserMessageManagerVC class])];
    }
    else {
        [self toLoginViewControll];
    }
}

/**
 到登录界面
 */
- (void)toLoginViewControll
{
    [self pushToViewControllerWithClassName:NSStringFromClass([LoginVC class])];
}

/**
 界面跳转

 @param index arrViewControllers 中的位置
 */
- (void)pushToViewControllerWithIndex:(NSInteger)index
{
    NSDictionary *dic = [_arrControllers objectAtIndex:index];
    NSString *className = [dic objectForKey:@"class"];
    [self pushToViewControllerWithStoryBoard:@"User" withStoryBoardId:className];
}

/**
 跳转到在 User storyBoard 中的界面

 @param VCId   VC 的 StoryBoardId
 */
- (void)pushVCWithStoryBoardId:(NSString *)VCId
{
    [self pushToViewControllerWithStoryBoard:@"User" withStoryBoardId:VCId];
}

#pragma mark - 属性

- (UICollectionViewFlowLayout *)layout
{
    if (!_layout) {
        _layout = [[UICollectionViewFlowLayout alloc] init];
        _layout.minimumLineSpacing = kCellPlace;
        _layout.minimumInteritemSpacing = kCellPlace;
        _layout.sectionInset = UIEdgeInsetsMake(kCellPlace, kCellPlace, kCellPlace, kCellPlace);
        
        _layout.headerReferenceSize = CGSizeMake(Screen_Width, isPad ? 450 : 320);
        
        CGFloat itemWidth = (Screen_Width - kCellPlace * 5) / 4;
        CGFloat itemHeight = itemWidth;
        
        itemHeight = [IPhoneVersion deviceSize] <= iPhone4inch ? itemHeight + 30 : itemHeight;
        itemHeight = isPad ? itemHeight - 30 : itemHeight;
        
        _layout.itemSize = CGSizeMake(itemWidth, itemHeight);
    }
    return _layout;
}

- (UICollectionView *)collectionView
{
    if (!_collectionView) {
        _collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, self.view.height - cHeaderHeight_64) collectionViewLayout:self.layout];
        _collectionView.delegate = self;
        _collectionView.dataSource = self;
        _collectionView.backgroundColor = [UIColor whiteColor];
        [self.view addSubview:_collectionView];
    }
    return _collectionView;
}

- (NSArray *)arrControllers
{
    _arrControllers = @[@{@"class": NSStringFromClass([UserOrderVC class]),         @"title": @"我的订阅", @"image": @"person2"},
                        @{@"class": NSStringFromClass([UserFavouriteVC class]),     @"title": @"我的收藏", @"image": @"person3"},
                        @{@"class": NSStringFromClass([UserRechargeVC class]),      @"title": @"我的钱包", @"image": @"person4"},
                        @{@"class": NSStringFromClass([UserFriendManagerVC class]), @"title": @"我的好友", @"image": @"person5"},
                        @{@"class": NSStringFromClass([UserClassVC class]),         @"title": @"我的班级", @"image": @"person6"},
                        @{@"class": NSStringFromClass([UserTaskVC class]),          @"title": @"我的任务", @"image": @"person7"},
                        @{@"class": NSStringFromClass([USecurityCenterVC class]),   @"title": @"安全中心", @"image": @"person8"},
                        @{@"class": NSStringFromClass([UserHelpVC class]),          @"title": @"使用帮助", @"image": @"person9"},
                        ];
    if (_userRequest.user.userType != ENUM_UserTypeTeacher && _userRequest.user.userType != ENUM_UserTypeOrganization) {
        NSMutableArray *array = [NSMutableArray arrayWithArray:_arrControllers];
        [array removeObjectAtIndex:4];
        _arrControllers = [NSArray arrayWithArray:array];
    }
    
    return _arrControllers;
}

@end
