//
//  ECRBookrackDataHandler.m
//  EasyChineseReading-ios
//
//  Created by Peanut Lee on 2017/10/25.
//  Copyright © 2017年 retech. All rights reserved.
//

#import "ECRBookrackDataHandler.h"
#import "ECRBookrackModel.h"
#import "ECRDownloadStateModel.h"

@interface ECRBookrackDataHandler ()


@end

@implementation ECRBookrackDataHandler

// MARK: 管理书架
//bookshelf/bookShelfManagement


// MARK: 修改分组名
//bookshelf/updatebookShelfGroupName
+ (void)bookShelfUpdateGroupNameWithGroupId:(NSInteger)groupId groupName:(NSString *)groupName success:(BookrackSuccess)success failure:(BookrackFailure)failure{
    [[ECRDataHandler sharedDataHandler] bookShelfWithGroupId:groupId groupName:groupName success:^(id object) {
        
    } failure:^(NSString *msg) {
        
    } commenFailure:^(NSError *error) {
        
    }];
}


// MARK: 请求全部图书
+ (void)bookShelf:(BookShelfSuccess)success failure:(BookrackFailure)failure{
    __block NSInteger abCount = 0;
    __block NSInteger bbCount = 0;
    [[ECRDataHandler sharedDataHandler] bookShelfWithSuccess:^(id object) {
//        NSLog(@"bookShelf -- %@",object);
        NSArray *arr = object;
        // 全部图书
        NSMutableArray *arrm = [NSMutableArray array];
        // 已购买图书
        NSMutableArray *arrmBuyed = [NSMutableArray array];
        [arr enumerateObjectsUsingBlock:^(id  _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
            ECRBookrackModel *book = [ECRBookrackModel mj_objectWithKeyValues:obj];
            book.isEditState = NO;
            
            abCount += 1;
            
            // 下载状态模型
            ECRDownloadStateModel *dsModel = [[ECRDownloadStateModel alloc] init];// download state
            dsModel.modelState = ECRDownloadStateModelStateNormal;
            book.dsModel = dsModel;
            dsModel.bookName = book.bookName;
//            NSLog(@"book -- %ld",book.owendType);
            if (book.books.count != 0) {// 该模型为文件夹
                abCount -= 1;
                [book.books enumerateObjectsUsingBlock:^(ECRBookrackModel * _Nonnull book_group,
                                                         NSUInteger idx_group, BOOL * _Nonnull stop_group) {
//                    NSLog(@"book_group -- %ld",book_group.owendType);
                    abCount += 1;
                    book_group.isEditState = NO;
                    ECRDownloadStateModel *dsModel_group = [[ECRDownloadStateModel alloc] init];// download state
                    dsModel_group.modelState = ECRDownloadStateModelStateNormal;
                    book_group.dsModel = dsModel_group;
                    dsModel_group.bookName = book_group.bookName;
                }];
                
            }
            [arrm addObject:book];
            
            // MARK: 已购买处理
            if (book.owendType == 1) {
                bbCount += 1;
                if (book.books.count != 0) {// 该模型为文件夹
                    bbCount -= 1;
                    [book.books enumerateObjectsUsingBlock:^(ECRBookrackModel * _Nonnull book_group,
                                                             NSUInteger idx_group, BOOL * _Nonnull stop_group) {
                        bbCount += 1;
                        book_group.isEditState = NO;
                        ECRDownloadStateModel *dsModel_group = [[ECRDownloadStateModel alloc] init];// download state
                        dsModel_group.modelState = ECRDownloadStateModelStateNormal;
                        book_group.dsModel = dsModel_group;
                        dsModel_group.bookName = book_group.bookName;
                        if (book_group.owendType == 1) {
                            [book.alreadyBuyBooks addObject:book_group];
                        }
                    }];
//                    NSLog(@"已购买group -- %@",book.alreadyBuyBooks);
                }
                [arrmBuyed addObject:book];
            }
        }];
//        NSLog(@"全部数组 -- %@",arrm);
//        NSLog(@"已购买数组 -- %@",arrmBuyed);
        if (success) {
            success(arrm,arrmBuyed,abCount,bbCount);
        }
        
    } failure:^(NSString *msg) {
        if (failure) {
            failure(nil,msg);
        }
    } commenFailure:^(NSError *error) {
        if (failure) {
            failure(error,nil);
        }
    }];
}


@end
