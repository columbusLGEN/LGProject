//
//  UserLeaseDetailVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/10/27.
//  Copyright © 2017年 retech. All rights reserved.
//

#import "UserLeaseDetailVC.h"
#import "ECRBookInfoViewController.h"

#import "ECRMoreBooksCell.h"

@interface UserLeaseDetailVC ()
<UITableViewDelegate, UITableViewDataSource>

@property (strong, nonatomic) UITableView *tableView;

@property (strong, nonatomic) NSMutableArray *arrLeases;
@property (strong, nonatomic) NSMutableArray *arrTicket;

@property (assign, nonatomic) NSInteger currentLeasePage;
@property (assign, nonatomic) NSInteger currentTicketPage;

@end

@implementation UserLeaseDetailVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configLeaseDetailView];
    if (_serial)
        [self getFirstPageLeases];
    else if (_ticket)
        [self getFirstTicketBooks];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

#pragma mark - 配置界面

- (void)updateSystemLanguage
{
    if (_serial) {
        self.title = [UserRequest sharedInstance].language == ENUM_LanguageTypeChinese ? _serial.serialName : _serial.serialName;
    }
    else if (_ticket){
        self.title = LOCALIZATION(@"包月");
    }
}

- (void)configLeaseDetailView
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height - cHeaderHeight_64) style:UITableViewStylePlain];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    
    _tableView.backgroundColor = [UIColor whiteColor];
    
    UIView *footer = [UIView new];
    footer.backgroundColor = [UIColor whiteColor];
    _tableView.tableFooterView = footer;
    
    [self.view addSubview:_tableView];
    
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([ECRMoreBooksCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([ECRMoreBooksCell class])];}

- (void)configMJRefresh
{
    _tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        _serial ? [self getFirstPageLeases] : [self getFirstTicketBooks];
    }];
    _tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        _serial ? [self getLeasesWithPage] : [self getTicketBooksWithPage];
    }];
}

#pragma mark - 获取数据

- (void)getFirstPageLeases
{
    _currentLeasePage = 0;
    [[BookRequest sharedInstance] getBooksWithPage:_currentLeasePage length:cListNumber_10 series:_serial.serialId Completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            self.arrLeases = [BookModel mj_objectArrayWithKeyValuesArray:object];
            if (_arrLeases.count > 0) {
                _currentLeasePage += 1;
            }
            [_tableView reloadData];
        }
    }];
}

- (void)getLeasesWithPage
{
    [[BookRequest sharedInstance] getBooksWithPage:_currentLeasePage length:cListNumber_10 series:_serial.serialId Completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            NSArray *array = [BookModel mj_objectArrayWithKeyValuesArray:object];
            if (array.count > 0) {
                _currentLeasePage += 1;
                [_arrLeases addObjectsFromArray:array];
                [_tableView reloadData];
            }
        }
    }];
}

- (void)getFirstTicketBooks
{
    _currentTicketPage = 0;
    [[OrderRequest sharedInstance] getTicketBooksWithGrantbatchId:_ticket.grantbatchId
                                                             page:_currentTicketPage
                                                           length:cListNumber_10
                                                       completion:^(id object, ErrorModel *error) {
                                                           if (error) {
                                                               [self presentFailureTips:error.message];
                                                           }
                                                           else {
                                                               self.arrTicket = [BookModel mj_objectArrayWithKeyValuesArray:object];
                                                               if (_arrTicket.count > 0) {
                                                                   _currentTicketPage += 1;
                                                               }
                                                               [_tableView reloadData];
                                                           }
                                                       }];
}

- (void)getTicketBooksWithPage
{
    [[OrderRequest sharedInstance] getTicketBooksWithGrantbatchId:_ticket.grantbatchId
                                                             page:_currentTicketPage
                                                           length:cListNumber_10
                                                       completion:^(id object, ErrorModel *error) {
                                                           NSArray *array = [BookModel mj_objectArrayWithKeyValuesArray:object];
                                                           if (array.count > 0) {
                                                               _currentTicketPage += 1;
                                                               [_arrTicket addObjectsFromArray:array];
                                                               [_tableView reloadData];
                                                           }
                                                       }];
}

#pragma mark -

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _serial ? _arrLeases.count : _arrTicket.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    ECRMoreBooksCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([ECRMoreBooksCell class])];
    cell.model = _serial ? _arrLeases[indexPath.row] : _arrTicket[indexPath.row];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 150.f;
}

#pragma mark -

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    UIStoryboard *board = [UIStoryboard storyboardWithName:@"BookInfo" bundle:nil];
    ECRBookInfoViewController *bivc = [board instantiateViewControllerWithIdentifier:@"ECRBookInfoViewController"];
    bivc.viewControllerPushWay = ECRBaseControllerPushWayPush;
    BookModel *book = [BookModel mj_objectWithKeyValues:_serial ? _arrLeases[indexPath.row] : _arrTicket[indexPath.row]];
    bivc.bookId = book.bookId;
    [self.navigationController pushViewController:bivc animated:YES];
}

#pragma mark - 属性

- (NSMutableArray *)arrLeases
{
    if (_arrLeases == nil) {
        _arrLeases = [NSMutableArray array];
    }
    return _arrLeases;
}

- (NSMutableArray *)arrTicket
{
    if (_arrTicket == nil) {
        _arrTicket = [NSMutableArray array];
    }
    return _arrTicket;
}

@end
