//
//  UOrderListViewController.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/2.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UOrderListViewController.h"

#import "UserOrderTableViewCell.h"
#import "UserOrderHeaderView.h"
#import "UserOrderFooterView.h"

#import "UOrderDetailVC.h"
#import "ECRBookFormViewController.h"
#import "ECRBookInfoViewController.h"
#import "ECRDownloadFirstReadSecond.h"

#import "ECRShoppingCarModel.h"

static CGFloat const kFooterHeight = 110.f;

@interface UOrderListViewController ()<UITableViewDelegate, UITableViewDataSource, UOrderFooterViewDelegate, UserOrderTableViewCellDelegate>

@property (strong, nonatomic) UITableView *tableView;
@property (strong, nonatomic) NSMutableArray *arrData;   // 数据

@property (nonatomic, assign) NSInteger currentPage;    // 当前页
@property (nonatomic, strong) EmptyView *emptyView;     // 没有数据
@property (assign, nonatomic) NSInteger selectedIndex;  // 选中的订单

@end

@implementation UOrderListViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    self.view.backgroundColor = [UIColor whiteColor];
    
    [self configTableView];
    [self.view addSubview:self.emptyView];
    [self configMJRefresh];
    [self getFirstPageOrderData];
    
    [self fk_observeNotifcation:kNotificationUpdateOrderInfo usingBlock:^(NSNotification *note) {
        [_arrData removeObjectAtIndex:_selectedIndex];
        [_arrData insertObject:note.object atIndex:_selectedIndex];
        [_tableView reloadData];
    }];
    [self fk_observeNotifcation:kNotificationDeleteOrderInfo usingBlock:^(NSNotification *note) {
        [_arrData removeObjectAtIndex:_selectedIndex];
        [_tableView reloadData];
    }];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 配置界面

- (void)updateSystemLanguage
{
    [self.emptyView updateEmptyViewWithType:ENUM_EmptyResultTypeUnknow Image:nil desc:LOCALIZATION(@"还没有购买过图书") subDesc:nil];
    [_tableView reloadData];
}

- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height - cHeaderHeight_44 - cHeaderHeight_64) style:UITableViewStyleGrouped];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.backgroundColor = [UIColor clearColor];
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView.showsVerticalScrollIndicator = NO;

    [self.view addSubview:_tableView];
    
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UserOrderTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UserOrderTableViewCell class])];
    
    // 自适应高度
    self.tableView.estimatedRowHeight = 10;
    self.tableView.rowHeight = UITableViewAutomaticDimension;
}

- (void)configMJRefresh
{
    _tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [self getFirstPageOrderData];
    }];
    _tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        [self getOrdersDataWithPage:_currentPage];
    }];
}

#pragma mark - 获取数据

- (void)getFirstPageOrderData
{
    _currentPage = 0;
    [[OrderRequest sharedInstance] getOrderListWithPage:_currentPage
                                            orderStatus:ENUM_ZOrderStateDone
                                              orderType:[NSString stringWithFormat:@"%ld", ENUM_PayPurposeBuy]
                                                 length:[NSString stringWithFormat:@"%ld", cListNumber_10]
                                             completion:^(id object, ErrorModel *error) {
                                                 [_tableView.mj_header endRefreshing];
                                                 if (error) {
                                                     [self presentFailureTips:error.message];
                                                 }
                                                 else {
                                                     NSMutableArray *array = [OrderModel mj_objectArrayWithKeyValuesArray:object];
                                                     _arrData = array;
                                                     if (_arrData.count > 0) {
                                                         _currentPage += 1;
                                                     }
                                                     _emptyView.hidden = _arrData.count > 0;
                                                     [self.tableView reloadData];
                                                 }
                                             }];
}

- (void)getOrdersDataWithPage:(NSInteger)page
{
    [[OrderRequest sharedInstance] getOrderListWithPage:page
                                            orderStatus:ENUM_ZOrderStateDone
                                              orderType:[NSString stringWithFormat:@"%ld", ENUM_PayPurposeBuy]
                                                 length:[NSString stringWithFormat:@"%ld", cListNumber_10]
                                             completion:^(id object, ErrorModel *error) {
                                                 [_tableView.mj_footer endRefreshing];
                                                 if (error) {
                                                     [self presentFailureTips:error.message];
                                                 }
                                                 else {
                                                     NSArray *array = [OrderModel mj_objectArrayWithKeyValuesArray:object];
                                                     if (array.count > 0) {
                                                         _currentPage += 1;
                                                         _emptyView.hidden = YES;
                                                         [_arrData addObjectsFromArray:array];
                                                         [self.tableView reloadData];
                                                     }
                                                 }
                                             }];
}

#pragma mark -
#pragma mark UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return _arrData.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    OrderModel *order = _arrData[section];
    return order.showAllBook ? order.books.count : 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UserOrderTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UserOrderTableViewCell class])];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.delegate = self;
    
    cell.index = indexPath.row;
    cell.data = _arrData[indexPath.section];
    
    return cell;
}

#pragma mark -
#pragma mark UITableViewDelegate

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    OrderModel *order = _arrData[section];
    UserOrderHeaderView *headerView = [UserOrderHeaderView loadFromNib];
    headerView.data = order;
    return headerView;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    OrderModel *order = _arrData[section];
    UserOrderFooterView *footerView = [UserOrderFooterView loadFromNib];
    footerView.delegate = self;
    footerView.data = order;
    return footerView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return cHeaderHeight_54;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    OrderModel *order = [OrderModel mj_objectWithKeyValues:_arrData[section]];

    return order.orderStatus == ENUM_ZOrderStateDone ? cHeaderHeight_54 : kFooterHeight;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [self.tableView deselectRowAtIndexPath:indexPath animated:YES];
    UOrderDetailVC *detail = [[UOrderDetailVC alloc] init];
    detail.order = _arrData[indexPath.section];
    _selectedIndex = indexPath.section;
    [self.navigationController pushViewController:detail animated:YES];
}

#pragma mark - UOrderFooterViewDelegate

/** 删除订单 */
- (void)deleteOrderWithOrder:(OrderModel *)order
{
    ZAlertView *alertDelete = [[ZAlertView alloc] initWithTitle:LOCALIZATION(@"确认删除?") message:nil delegate:self cancelButtonTitle:LOCALIZATION(@"取消") otherButtonTitles:LOCALIZATION(@"确定"), nil];
    alertDelete.whenDidSelectOtherButton = ^{
        [[OrderRequest sharedInstance] deleteOrderWithOrderId:order.orderId completion:^(id object, ErrorModel *error) {
            if (error) {
                [self presentFailureTips:error.message];
            }
            else {
                NSInteger index = [_arrData indexOfObject:order];
                NSIndexSet *set = [NSIndexSet indexSetWithIndex:index];
                NSMutableArray *array = [NSMutableArray arrayWithArray:_arrData];
                [array removeObjectAtIndex:index];
                _arrData = array;
                [_tableView deleteSections:set withRowAnimation:UITableViewRowAnimationNone];
            }
        }];
    };
    [alertDelete show];
}

/** 取消订单 */
- (void)cancelOrderWithOrder:(OrderModel *)order
{
    [[OrderRequest sharedInstance] cancelOrderWithOrderId:order.orderId completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            order.orderStatus = ENUM_ZOrderStateCancel;
            NSInteger index = [_arrData indexOfObject:order];
            NSIndexSet *set = [NSIndexSet indexSetWithIndex:index];
            [_tableView reloadSections:set withRowAnimation:UITableViewRowAnimationNone];
        }
    }];
}

/** 支付订单*/
- (void)payOrderWithOrder:(OrderModel *)order
{
    if (order.books.count > 0) {
        CGFloat price = 0;
        NSMutableArray *array = [NSMutableArray array];
        for (NSInteger i = 0; i < order.books.count; i ++) {
            BookModel *book = [BookModel mj_objectWithKeyValues:order.books[i]];
            NSDictionary *dic = [book createDictionayFromModelProperties];
            ECRShoppingCarModel *shopModel = [ECRShoppingCarModel mj_objectWithKeyValues:dic];
            price += book.price;
            [array addObject:shopModel];
        }
        
        ECRBookFormViewController *dFormDetail = [[ECRBookFormViewController alloc] init];
        dFormDetail.viewControllerPushWay = ECRBaseControllerPushWayPush;
        dFormDetail.tickedArray = array;
        dFormDetail.tickedPrice = price;
        // TODO: 添加订单 id
        [self.navigationController pushViewController:dFormDetail animated:YES];
    }
}

/** 评价订单 */
- (void)evaluateWithOrder:(OrderModel *)order
{
    UOrderDetailVC *detail = [[UOrderDetailVC alloc] init];
    detail.order = order;
    _selectedIndex = [_arrData indexOfObject:order];
    [self.navigationController pushViewController:detail animated:YES];
}

/** 展示当前订单全部书籍 */
- (void)showAllBooksWithOrder:(OrderModel *)order
{
    NSInteger index = [_arrData indexOfObject:order];
    NSIndexSet *set = [NSIndexSet indexSetWithIndex:index];
    [_tableView reloadSections:set withRowAnimation:UITableViewRowAnimationNone];
}

#pragma mark - UserOrderTableViewCellDelegate

- (void)toBookDetailWithBook:(BookModel *)book
{
    // 进入详情页面
    UIStoryboard *board = [UIStoryboard storyboardWithName:@"BookInfo" bundle:nil];
    ECRBookInfoViewController *bivc = [board instantiateViewControllerWithIdentifier:@"ECRBookInfoViewController"];
    bivc.viewControllerPushWay = ECRBaseControllerPushWayPush;
    bivc.bookId = book.bookId;
    [self.navigationController pushViewController:bivc animated:YES];
}

- (void)readBookWithBook:(BookModel *)book
{
    [ECRDownloadFirstReadSecond downloadFirstReadSecondWithvc:self book:book success:^{
        
    } failure:^(NSError *error) {
        [self presentFailureTips:error.domain];
    }];
}

#pragma mark - 属性

- (EmptyView *)emptyView
{
    if (_emptyView == nil) {
        _emptyView = [EmptyView loadFromNibWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height)];
    }
    return _emptyView;
}

@end
