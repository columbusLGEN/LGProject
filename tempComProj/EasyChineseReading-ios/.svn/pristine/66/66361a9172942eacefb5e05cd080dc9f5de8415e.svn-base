//
//  UTaskSystemVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/9/11.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UTaskSystemVC.h"

#import "UTaskTableViewCell.h"

@interface UTaskSystemVC () <
UITableViewDelegate,
UITableViewDataSource,
UTaskTableViewCellDelegate
>

@property (strong, nonatomic) UITableView *tableView;

@property (nonatomic, strong) NSArray        *arrTasks;        // 全部任务
@property (nonatomic, strong) NSMutableArray *arrEveryDayTask; // 每日任务
@property (nonatomic, strong) NSMutableArray *arrLongTimeTask; // 长期任务

@property (nonatomic, strong) TaskModel *task;              // 正在获取积分的任务
@property (nonatomic, assign) ENUM_TaskType taskType;       // 任务类别

@property (strong, nonatomic) ZSegment *segment; 

@end

@implementation UTaskSystemVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configSystemTaskView];
    [self getTasks];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)updateSystemLanguage
{
    [_tableView reloadData];
}

#pragma mark - 配置界面

- (void)configSystemTaskView
{
    _arrLongTimeTask = [NSMutableArray array];
    _arrEveryDayTask = [NSMutableArray array];
    _arrTasks        = [NSArray array];
    
    _taskType = ENUM_TaskTypeEveryDay;
    
    [self.view addSubview:self.tableView];

    _segment = [[ZSegment alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, cHeaderHeight_44) leftTitle:LOCALIZATION(@"每日任务") rightTitle:LOCALIZATION(@"一次性任务") selectedColor:[UIColor cm_mainColor] sliderColor:[UIColor clearColor]];
    [self.view addSubview:_segment];
    
    WeakSelf(self)
    _segment.selectedLeft = ^{
        weakself.taskType = ENUM_TaskTypeEveryDay;
        [weakself.tableView reloadData];
    };
    _segment.selectedRight = ^{
        weakself.taskType = ENUM_TaskTypeLongTime;
        [weakself.tableView reloadData];
    };
    
}

#pragma mark - 获取数据

- (void)getTasks
{
    [[TaskRequest sharedInstance] getTaskListWithCompletion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentSuccessTips:error.message];
        }
        else {
            self.arrTasks = [TaskModel mj_objectArrayWithKeyValuesArray:object];
        }
    }];
}

- (void)setArrTasks:(NSArray *)arrTasks
{
    [arrTasks enumerateObjectsUsingBlock:^(TaskModel *task, NSUInteger idx, BOOL * _Nonnull stop) {
        if (task.taskTimes == 0) {
            [_arrEveryDayTask addObject:task];
        }
        else {
            [_arrLongTimeTask addObject:task];
        }
        
        if (idx == arrTasks.count - 1) {
            [self.tableView reloadData];
        }
    }];
}

#pragma mark - UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _taskType == ENUM_TaskTypeEveryDay ? _arrEveryDayTask.count : _arrLongTimeTask.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UTaskTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UTaskTableViewCell class])];
    cell.delegate = self;
    cell.selectedIndex = indexPath.row;
    cell.data = _taskType == ENUM_TaskTypeEveryDay ? _arrEveryDayTask[indexPath.row] : _arrLongTimeTask[indexPath.row];
    return cell;
}

#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
}

#pragma mark - UTaskTableViewCellDelegate

- (void)getTaskAwardWithTask:(TaskModel *)task index:(NSInteger)index
{
    if (task.status == ENUM_TaskStatusTypeDone) {
        _task = task;
        [[TaskRequest sharedInstance] getTaskAwardWithTask:_task
                                                completion:^(id object, ErrorModel *error) {
                                                    if (error) {
                                                        [self presentFailureTips:error.message];
                                                    }
                                                    else {
                                                        [self getIntegralSuccessWithTask:_task index:index];
                                                    }
                                                }];
    }
//    else if (task.status == ENUM_TaskStatusTypeGetIntegral) {
//        
//    }
//    else {
//        [self presentFailureTips:@"任务未完成, 请完成后领取"];
//    }
}

- (void)getIntegralSuccessWithTask:(TaskModel *)task index:(NSInteger)index
{
    NSIndexPath *indexPath = [NSIndexPath indexPathForRow:index inSection:0];
    UTaskTableViewCell *cell = (UTaskTableViewCell *)[_tableView cellForRowAtIndexPath:indexPath];
    task.status = ENUM_TaskStatusTypeGetIntegral;
    cell.isSelected = YES;
}

#pragma mark - 属性

- (UITableView *)tableView
{
    if (_tableView == nil) {
        _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, cHeaderHeight_44, self.view.width, self.view.height - 2*cHeaderHeight_44 - cHeaderHeight_64) style:UITableViewStylePlain];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
        
        _tableView.rowHeight = UITableViewAutomaticDimension;
        _tableView.estimatedRowHeight = 100;
        
        [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UTaskTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UTaskTableViewCell class])];
    }
    return _tableView;
}

@end
