//
//  UFriendAddVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/1.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UFriendAddVC.h"

#import "UFriendAddTableViewCell.h"

@interface UFriendAddVC ()<
UITableViewDelegate, UITableViewDataSource,
UISearchBarDelegate,
UFriendAddTableViewCellDelegate>

@property (strong, nonatomic) IBOutlet UITableView *tableView;
@property (strong, nonatomic) IBOutlet UISearchBar *searchBar;

@property (assign, nonatomic) NSInteger currentPage; // 当前页
@property (assign, nonatomic) BOOL searchState;      // 搜索状态

@property (strong, nonatomic) NSArray *arrFriends;   // 推荐的好友
@property (strong, nonatomic) NSArray *arrSearchs;   // 搜索的好友

@end

@implementation UFriendAddVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self configAddFriend];
    _currentPage = 0;
    _searchState = NO;
    [self getRecommendFriendsWithPage:_currentPage];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 配置界面

- (void)configAddFriend
{
    self.title = @"我的好友";
    [self registerTableView];
    [self configSearchBar];
}

- (void)configSearchBar
{
    // 样式
    _searchBar.searchBarStyle = UISearchBarStyleProminent;
    // ** 自定义searchBar的样式 **
    UITextField* searchField = nil;
    // 注意searchBar的textField处于孙图层中
    for (UIView* subview  in [_searchBar.subviews firstObject].subviews) {
        NSLog(@"%@", subview.class);
        // 打印出两个结果:
        /*
         UISearchBarBackground
         UISearchBarTextField
         */
        
        if ([subview isKindOfClass:[UITextField class]]) {
            searchField = (UITextField*)subview;
            // leftView就是放大镜
            // searchField.leftView=nil;
            // 删除searchBar输入框的背景
            [searchField setBackground:nil];
            [searchField setBorderStyle:UITextBorderStyleNone];
            searchField.backgroundColor = [UIColor cm_lineColor_D9D7D7_1];
            // 设置圆角
            searchField.layer.cornerRadius = 15;
            searchField.layer.masksToBounds = YES;
            break;
        }
    }
}

- (void)registerTableView
{
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UFriendAddTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UFriendAddTableViewCell class])];
}

#pragma mark - 获取推荐好友

- (void)getRecommendFriendsWithPage:(NSInteger)page
{
    [[FriendRequest sharedInstance] getRecommendFriendsWithPage:page length:cListNumber_10 * 2 completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            _currentPage += 1;
            _arrFriends = [FriendModel mj_objectArrayWithKeyValuesArray:object];
            [_tableView reloadData];
        }
    }];
}

- (void)getFriendWithAccount:(NSString *)account
{
    [[FriendRequest sharedInstance] getFriendListWithUserName:account completion:^(id object, ErrorModel *error) {
        
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            _arrFriends = [FriendModel mj_objectArrayWithKeyValuesArray:object];
            [_tableView reloadData];
        }
    }];
}

#pragma mark - UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _searchState ? _arrSearchs.count : _arrFriends.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UFriendAddTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"UFriendAddTableViewCell"];
    cell.delegate = self;
    cell.data = _searchState ? _arrSearchs[indexPath.row] : _arrFriends[indexPath.row];
    return cell;
}

#pragma mark - UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 70.f;
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    [cell setCellSeparatorInset:UIEdgeInsetsZero];
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    UIView *view = [[UIView alloc] init];
    view.backgroundColor = [UIColor whiteColor];
    return view;
}

#pragma mark - UISearchBarDelegate

- (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar
{
    [[FriendRequest sharedInstance] getFriendListWithUserName:_searchBar.text completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            _arrSearchs = [FriendModel mj_objectArrayWithKeyValuesArray:object];
            [_tableView reloadData];
        }
    }];
}

- (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar
{
    _arrSearchs = @[];
    _searchState = YES;
    [_tableView reloadData];
}

#pragma mark - UFriendAddTableViewCellDelegate

- (void)addFriendWithFriend:(FriendModel *)user
{
    [[FriendRequest sharedInstance] addFriendWithFriendId:user.userId completion:^(id object, ErrorModel *error) {
        if (error) {
            [self presentFailureTips:error.message];
        }
        else {
            self.addFriendSuccess(user);
        }
    }];
}

@end
