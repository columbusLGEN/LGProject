//
//  ECRBookInfoTableViewCell.m
//  EasyChineseReading-ios
//
//  Created by lee on 2017/9/12.
//  Copyright © 2017年 lee. All rights reserved.
//
//static CGFloat catalogFont = 12;
static CGFloat cellBottomMargin = 15;
static CGFloat catalogLineSpace = 6;
static CGFloat marginTotal = 40;// 计算内容高度时使用
static NSString *recoCell = @"ECRBiRecoCollectionViewCell";

#import "ECRBookInfoTableViewCell.h"
#import "ECRBookInfoModel.h"
#import "NSString+TOPExtension.h"
#import "ECRBiRecoCollectionViewCell.h"
#import "ECRClassfyBookModel.h"
#import "ECRRecoBook.h"

@interface ECRBookInfoTableViewCell ()<
UICollectionViewDelegate,
UICollectionViewDataSource
>
@property (weak, nonatomic) IBOutlet UIView *adreV;// 标题前面的rect
@property (weak, nonatomic) IBOutlet UIView *adreV1;
@property (weak, nonatomic) IBOutlet UIView *adreV2;
@property (weak, nonatomic) IBOutlet UIView *adreV3;
@property (weak, nonatomic) IBOutlet UIView *line;
@property (weak, nonatomic) IBOutlet UIView *line1;
@property (weak, nonatomic) IBOutlet UIView *line2;
@property (weak, nonatomic) IBOutlet UIView *line3;

// 1
@property (weak, nonatomic) IBOutlet UILabel *t0;// 标题
@property (weak, nonatomic) IBOutlet UILabel *publishCom;// 出版社
@property (weak, nonatomic) IBOutlet UILabel *pubTime;// 出版时间
@property (weak, nonatomic) IBOutlet UILabel *isbn;// isbn
@property (weak, nonatomic) IBOutlet UILabel *eisbn;// eisbn
@property (weak, nonatomic) IBOutlet UILabel *fl;// 分类
@property (weak, nonatomic) IBOutlet UILabel *zt;// 主题
@property (weak, nonatomic) IBOutlet UILabel *dx;// 对象

// 2
@property (weak, nonatomic) IBOutlet UILabel *t1;
@property (weak, nonatomic) IBOutlet UILabel *nr;// 内容简介

// 3
@property (weak, nonatomic) IBOutlet UILabel *t2;// 目录
@property (strong,nonatomic) UILabel *catalogLabel;//
//@property (strong,nonatomic) WKWebView *catalogWk;
@property (weak, nonatomic) IBOutlet UIButton *foldUnfold;

// 4
@property (weak, nonatomic) IBOutlet UILabel *t4;
@property (weak, nonatomic) IBOutlet UICollectionView *recoView;// 推荐书籍
@property (weak, nonatomic) IBOutlet UICollectionViewFlowLayout *reciFlowLayout;
@property (strong,nonatomic) NSArray *recoArr;// 推荐书籍数组

@property (assign,nonatomic) CGFloat catalogFont;//
@property (assign,nonatomic) CGFloat rbcWidth;// 推荐书籍cell width
@property (assign,nonatomic) CGFloat rbcHeight;// 推荐书籍cell height

@end

@implementation ECRBookInfoTableViewCell


- (void)setRecoArr:(NSArray *)recoArr{
    _recoArr = recoArr;
    [self.recoView reloadData];
}

- (IBAction)foldUnfold:(UIButton *)sender {// 展开收起
    
}

- (void)setModel:(ECRBookInfoModel *)model{
    _model = model;
    CGFloat fcHeight_0;// first cell height
    CGFloat font_1;
    CGFloat addtional_1;
    CGFloat margin_3;
    CGFloat margin_4;
    CGFloat cellHeight_4;
    if ([[ECRMultiObject sharedInstance] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        fcHeight_0 = 180;
        font_1 = 16;
        addtional_1 = 80;
        margin_3 = 20;
        margin_4 = 40;
        cellHeight_4 = self.rbcHeight + 96;
    }else{
        fcHeight_0 = 120;
        font_1 = 12;
        addtional_1 = 50;
        margin_3 = 8;
        margin_4 = 20;
        cellHeight_4 = self.rbcHeight + 52;
    }
    // 立即计算frame
    [self setNeedsLayout];
    [self layoutIfNeeded];
    switch (self.indx.row) {
        case 0:{
            // 图书信息
            _publishCom.text = [NSString stringWithFormat:@"出版社: %@",model.press?model.press:@""];
            _pubTime.text = [NSString stringWithFormat:@"出版时间: %@",model.publicationTime?model.publicationTime:@""];
            _isbn.text = [NSString stringWithFormat:@"ISBN: %@",model.isbn?model.isbn:@""];
            _eisbn.text = [NSString stringWithFormat:@"EISBN: %@",model.eisbn?model.eisbn:@""];
       
            for (NSInteger i = 0; i < model.classifyBook.count; i++) {
                ECRClassfyBookModel *classifyModel = model.classifyBook[i];
                if (i == 0) {
                    _fl.text = [NSString stringWithFormat:@"所属分类: 等级>%@",classifyModel.classifyName];
                }
                if (i == 1) {
                    _zt.text = [NSString stringWithFormat:@"主题>%@",classifyModel.classifyName];
                }
                if (i == 2) {
                    _dx.text = [NSString stringWithFormat:@"对象>%@",classifyModel.classifyName];
                }
            }
            
            _rHeight = fcHeight_0;//CGRectGetMaxY(_dx.frame) + cellBottomMargin;
            _rHeight1 = _rHeight;
        }
            break;
        case 1:{
            // 内容简介
            _nr.text = model.contentValidity;
            // 计算文字内容高度
            
            CGSize textSize = [model.contentValidity sizeOfTextWithMaxSize:CGSizeMake(Screen_Width - marginTotal, 0) font:[UIFont systemFontOfSize:font_1]];
            
            _rHeight = textSize.height + addtional_1;
            _rHeight2 = _rHeight;
        }
            break;
        case 2:{
            
            if (model.catalog == nil || [model.catalog isEqualToString:@""]) {
                self.catalogLabel.text = model.catalog;
            }else{
                self.catalogLabel.attributedText = [model.catalog setLineSpaceWithSpace:catalogLineSpace];
            }
            [self.contentView addSubview:self.catalogLabel];
            [self.catalogLabel mas_makeConstraints:^(MASConstraintMaker *make) {
                make.top.equalTo(_t2.mas_bottom).offset(margin_3);
                make.left.equalTo(_t2.mas_left);
                make.right.equalTo(self.contentView.mas_right).offset(-10);
                
            }];
            [self setNeedsLayout];
            [self layoutIfNeeded];
            
            _rHeight = CGRectGetMaxY(self.catalogLabel.frame) + cellBottomMargin + margin_4;
            _rHeight3 = _rHeight;
        }
            break;
        case 3:{
            // 推荐书籍
            self.recoArr = model.recommend;
            
//            _rHeight = CGRectGetMaxY(_recoView.frame) + cellBottomMargin;
            _rHeight = cellHeight_4;
            _rHeight4 = _rHeight;
        }
            break;
    }
    
}

+ (NSString *)gainReuseID:(NSIndexPath *)indexPath{
    switch (indexPath.row) {
        case 0:
        return @"ECRBookInfoTableViewCell1";
            break;
        case 1:
        return @"ECRBookInfoTableViewCell2";
            break;
        case 2:
        return @"ECRBookInfoTableViewCell3";
            break;
        case 3:
        return @"ECRBookInfoTableViewCell4";
            break;
    }
    return nil;
}
+ (CGFloat)gainRowHeight:(ECRBookInfoModel *)model{
    // TODO:
    return 0;
}


- (void)awakeFromNib {
    [super awakeFromNib];
    self.selectionStyle = UITableViewCellSelectionStyleNone;
    _foldUnfold.hidden = YES;
    
    _reciFlowLayout.itemSize = CGSizeMake(self.rbcWidth, self.rbcHeight);
    
    _reciFlowLayout.scrollDirection = UICollectionViewScrollDirectionHorizontal;
//    _reciFlowLayout.minimumInteritemSpacing = 20;
    if (Screen_Width > 375) {
        _reciFlowLayout.minimumLineSpacing = 42;// item 横向间距
    }else{
        _reciFlowLayout.minimumLineSpacing = 26;// item 横向间距
    }
    
    [_recoView registerNib:[UINib nibWithNibName:recoCell bundle:nil] forCellWithReuseIdentifier:recoCell];
    _recoView.dataSource = self;
    _recoView.delegate = self;
    
}

#pragma mark - collcetion view delegate
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    return self.recoArr.count;
}
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    ECRBiRecoCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:recoCell forIndexPath:indexPath];
    ECRRecoBook *model = self.recoArr[indexPath.row];
    cell.model = model;
    return cell;
}
- (UILabel *)catalogLabel{
    if (_catalogLabel == nil) {
        _catalogLabel = [[UILabel alloc] init];
        _catalogLabel.numberOfLines = 0;
        _catalogLabel.font = [UIFont systemFontOfSize:self.catalogFont];
        _catalogLabel.textColor = [UIColor cm_blackColor_333333_1];
    }
    return _catalogLabel;
}

- (CGFloat)catalogFont{
    if ([[ECRMultiObject sharedInstance] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        return 16;
    }else{
        return 12;
    }
}

// iPad 适配： 推荐书籍 item size
- (CGFloat)rbcWidth{
    if ([[ECRMultiObject sharedInstance] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        return 87;
    }else{
        return 60;
    }
}
- (CGFloat)rbcHeight{
    if ([[ECRMultiObject sharedInstance] userInterfaceIdiom] == UIUserInterfaceIdiomPad) {
        return 163;
    }else{
        return 120;
    }
}

@end

//            // 计算 带换行的目录字符串的高度
//            CGSize catalogSize = [model.catalog sizeOfTextWithMaxSize:CGSizeMake(Screen_Width - 40, 0) font:[UIFont systemFontOfSize:catalogFont]];
//            _rHeight = catalogSize.height + 10;


//            // 目录
//            NSString *html = @"<html>\n<span style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\">第一单元　我和你</span><br style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\"><span style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\">　第一课　你好</span><br style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\"><span style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\">　第二课　你叫什么</span><br style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\"><span style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\">　第三课　你家在哪儿</span><br style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\"><span style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\">第二单元　我的家</span><br style=\"color: rgb(101, 101, 101); font-family: &quot;Hiragino Sans GB&quot;, Verdana, Simsun; font-size: 14px;\">\n</html>";
//            // 马上布局,计算frame
//            _catalogWk = [[WKWebView alloc] init];
//            _catalogWk.navigationDelegate = self;
//            [self.contentView addSubview:_catalogWk];
//            [_catalogWk mas_makeConstraints:^(MASConstraintMaker *make) {
//                make.top.equalTo(_t2.mas_bottom).offset(5);
//                make.left.equalTo(_t2.mas_left);
//                make.right.equalTo(self.contentView.mas_right).offset(-10);
////                make.bottom.equalTo(self.contentView.mas_bottom).offset(-10);
//                make.height.equalTo(@60);
//            }];
//            [_catalogWk loadHTMLString:html baseURL:nil];
//            [self setNeedsLayout];
//            [self layoutIfNeeded];






