//
//  UserMessageManagerVC.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 2017/10/13.
//  Copyright © 2017年 retech. All rights reserved.
//

#import "UserMessageManagerVC.h"

#import "UMessageTableViewCell.h"

#import "UFriendInfoVC.h"
#import "UFriendChatVC.h"
#import "UserMessageSystemVC.h"

@interface UserMessageManagerVC ()<
UITableViewDelegate, UITableViewDataSource,
UMessageTableViewCellDelegate>

@property (strong, nonatomic) UITableView *tableView; // 列表

@property (strong, nonatomic) NSMutableArray *arrUsersMessages ; // 用户消息
@property (strong, nonatomic) NSMutableArray *arrSystemMessages; // 系统消息

@end

@implementation UserMessageManagerVC

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.title = @"消息";
    [self getUnReadMessages];
    
}

#pragma mark - 配置界面

- (void)configTableView
{
    _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];
    
    _tableView.delegate = self;
    _tableView.dataSource = self;
    
    _tableView.estimatedRowHeight = 100;
    _tableView.rowHeight = UITableViewAutomaticDimension;
    
    _tableView.tableFooterView = [UIView new];
    
    [_tableView registerNib:[UINib nibWithNibName:NSStringFromClass([UMessageTableViewCell class]) bundle:nil] forCellReuseIdentifier:NSStringFromClass([UMessageTableViewCell class])];
    
    [self.view addSubview:_tableView];
}

#pragma mark - 获取数据
// 拉取未读消息
- (void)getUnReadMessages
{
//    [[FriendRequest sharedInstance] getMessageAndShareBookCompletion:^(id object, ErrorModel *error) {
//        if (error) {
//            [self presentFailureTips:error.message];
//        }
//        else {
//            self.arrUsersMessages = [UserModel mj_objectArrayWithKeyValuesArray:object];
//            for (NSInteger i = 0; i < _arrSystemMessages.count; i ++) {
//                UserModel *user = _arrSystemMessages[i];
//                if (user.userId == 0) {
//                    [_arrSystemMessages addObject:user];
//                    [_arrUsersMessages removeObject:user];
//                }
//            }
//            [self configTableView];
//            [_tableView reloadData];
//        }
//    }];
}

#pragma mark - UITableViewDataSource

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return section == 0 ? 1 : _arrUsersMessages.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UMessageTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UMessageTableViewCell class])];
    cell.delegate = self;
    if (0 == indexPath.section) {
        if (_arrSystemMessages.count > 0) {
            cell.data = _arrSystemMessages.firstObject;
        }
    }
    else {
        cell.data = _arrUsersMessages[indexPath.row];
    }
    return cell;
}

#pragma mark - UITableViewDelegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (0 == indexPath.section) {
        UserMessageSystemVC *systemVC = [UserMessageSystemVC loadFromStoryBoard:@"User"];
        systemVC.arrNewMessages = _arrSystemMessages;
        [self.navigationController pushViewController:systemVC animated:YES];
    }
    else {
        UserModel *user = _arrUsersMessages[indexPath.row];
        UFriendChatVC *chatVC = [UFriendChatVC loadFromStoryBoard:@"User"];
        chatVC.userId = user.userId;
        [self.navigationController pushViewController:chatVC animated:YES];
    }
}

#pragma mark - UMessageTableViewCellDelegate

- (void)seeUserInfoWithUser:(UserModel *)user
{
    UFriendInfoVC *frinendInfo = [UFriendInfoVC loadFromStoryBoard:@"User"];
    FriendModel *friend = [FriendModel new];
    friend.userId  = user.userId;
    friend.name    = user.name;
    friend.iconUrl = user.iconUrl;
    frinendInfo.friendInfo = friend;
    [self.navigationController pushViewController:frinendInfo animated:YES];
}

#pragma mark - 属性

- (NSMutableArray *)arrUsersMessages
{
    if (_arrUsersMessages == nil) {
        _arrUsersMessages = [NSMutableArray array];
    }
    return _arrUsersMessages;
}

- (NSMutableArray *)arrSystemMessages
{
    if (_arrSystemMessages == nil) {
        _arrSystemMessages = [NSMutableArray array];
    }
    return _arrSystemMessages;
}

@end
