//
//  UInfoAddressViewController.m
//  EasyChineseReading-ios
//
//  Created by 赵春阳 on 17/9/5.
//  Copyright © 2017年 lee. All rights reserved.
//

#import "UInfoAddressViewController.h"

#import "ECRSearchTitleView.h"

@interface UInfoAddressViewController ()<UITableViewDelegate, UITableViewDataSource, ECRSearchTitleViewDelegate>

@property (strong, nonatomic) UITableView *tableView;

@property (strong, nonatomic) NSMutableArray *arrCountry;         // 国家数组
@property (strong, nonatomic) NSMutableArray *arrSearchs;         // 国家搜索结果
@property (strong, nonatomic) NSMutableArray *arrIndexTitles;     // 字母索引
@property (strong, nonatomic) NSMutableArray *arrIndexCharacter;  // 数据字典，对应索引

@property (strong, nonatomic) NSMutableDictionary *dicCountry;    // 数据源字典

@property (assign, nonatomic) BOOL isSearch; // 搜索结果

@end

@implementation UInfoAddressViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self getCountryData];
    [self configAddressView];
    [self setNavRighSearchItem];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark -
#pragma mark 获取国家

- (void)getCountryData
{
    NSBundle *bundle = [NSBundle mainBundle];
    NSString *plistPath = [bundle pathForResource:@"country" ofType:@"plist"];
    NSDictionary *dic = [[NSDictionary alloc] initWithContentsOfFile:plistPath];
    
    // 英语国家数组
    NSArray *countryE = [dic objectForKey:@"countryE"];
    // 汉语国家数组
    NSArray *countryC = [dic objectForKey:@"countryC"];
    // 根据系统语言判断使用那种国家数组
    NSArray *array = (0) ? countryC : countryE;
    
    _arrCountry = [NSMutableArray arrayWithArray:array];
    [self handleArrayWithArray:_arrCountry];
    
    _isSearch = NO;
    
    [_tableView reloadData];
}

- (void)configAddressView
{
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 64, Screen_Width, 44)];
    view.backgroundColor = [UIColor whiteColor];
    
    UILabel *currentCountry = [[UILabel alloc] initWithFrame:CGRectMake(10, 10, 200, 24)];
    currentCountry.backgroundColor = [UIColor whiteColor];
    currentCountry.text = [NSString stringWithFormat:@"当前国家：%@", @"中国"];
    
    [view addSubview:currentCountry];
    [self.view addSubview:view];
    
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, view.height + view.y, Screen_Width, self.view.height - view.height - view.y) style:UITableViewStylePlain];
    
    _tableView.sectionIndexBackgroundColor = [UIColor whiteColor];
    _tableView.sectionIndexColor = [UIColor cm_greenColor_21C0AE_1];
    _tableView.sectionIndexMinimumDisplayRowCount = 1;
    
    _tableView.delegate = self;
    _tableView.dataSource = self;
    
    // 索引背景透明

    [_tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:@"cell"];
    
    [self.view addSubview:_tableView];
}

#pragma mark -
#pragma mark UITableViewDataSource

// 分段数
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return _isSearch ? 1 : _arrIndexCharacter.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    NSInteger rowNumber = 0;
    if (_isSearch) {
        rowNumber = _arrSearchs.count;
    }
    else {
        if (self.arrIndexCharacter.count > section) {
            NSMutableArray *arrayTemp = (NSMutableArray *)[self.dicCountry objectForKey:[self.arrIndexCharacter objectAtIndex:section]];
            rowNumber = arrayTemp.count;
        }
    }
    return rowNumber;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell"];
    
    if (_isSearch) {
        cell.textLabel.text = [_arrSearchs objectAtIndex:indexPath.row];
    }
    else {
        if (self.arrIndexCharacter.count > indexPath.section) {
            NSMutableArray *arrayTemp = (NSMutableArray *)[self.dicCountry objectForKey:[self.arrIndexCharacter objectAtIndex:indexPath.section]];
            if (arrayTemp.count > indexPath.row)
                cell.textLabel.text = [arrayTemp objectAtIndex:indexPath.row];
        }
    }
    return cell;
}

#pragma mark -
#pragma mark UITableViewDelegate


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 44.f;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
}

#pragma mark ---------- 索引相关 ----------

// 处理数组，按字母排序
- (void)handleArrayWithArray:(NSArray *)array
{
    if (array) {
        [array enumerateObjectsUsingBlock:^(NSString *obj, NSUInteger idx, BOOL *stop) {
            if (![NSString isEmpty:obj]) {
                // 已经遍历过，不需要在遍历
                *stop = YES;
            }
            
            if (_dicCountry) {
                [self.dicCountry removeAllObjects];
                self.dicCountry = nil;
            }
            self.dicCountry = [NSMutableDictionary dictionary];
            
            if (_arrIndexCharacter) {
                [self.arrIndexCharacter removeAllObjects];
                self.arrIndexCharacter = nil;
            }
            self.arrIndexCharacter = [NSMutableArray array];
            
            _arrCountry = [NSMutableArray arrayWithArray:array];

            [_arrCountry enumerateObjectsUsingBlock:^(NSString *obj, NSUInteger idx, BOOL *stop) {

                NSString *firstLetter = [NSString firstLetter:obj];
                if ([self.dicCountry.allKeys containsObject:firstLetter]) {
                    NSMutableArray *arrayTemp = (NSMutableArray *)[self.dicCountry objectForKey:firstLetter];
                    if (arrayTemp) {
                        [arrayTemp addObject:obj];
                    }
                }
                else {
                    NSMutableArray *arrayTemp = [NSMutableArray arrayWithObjects:obj, nil];
                    [self.dicCountry setObject:arrayTemp forKey:firstLetter];
                    [self.arrIndexCharacter addObject:firstLetter];
                }
            }];
        }];
    }
}

// 索引数组
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)tableView
{
    return _isSearch ? nil : _arrIndexCharacter;
}

// 滑动触发索引事件
- (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index
{
    NSInteger count = 0;
    if (!_isSearch) {
        for (NSString *character in _arrIndexCharacter) {
            if([character isEqualToString:title]) {
                return count;
            }
            count ++;
        }
    }
    return 0;
}

// 分段标题
- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{
    NSString *title;
    if (_isSearch)
        title = nil;
    else
        title = [NSString stringWithFormat:@"%@", [_arrIndexCharacter objectAtIndex:section]];
    
    return title;
}

#pragma mark -
#pragma mark 搜索

// 设置导航栏右侧搜索按钮
- (void)setNavRighSearchItem{
    
    self.title = @"所在国家";
    UIBarButtonItem *rItem = [[UIBarButtonItem alloc] initWithTitle:@"🔍" style:UIBarButtonItemStylePlain target:self action:@selector(countrySearch:)];
    self.navigationItem.rightBarButtonItem = rItem;
}

- (void)countrySearch:(id)sender {
    _isSearch = YES;
    [self replaceTitleViewForSearch];
}

// 设置顶部搜索框
- (void)replaceTitleViewForSearch {
    // 设置 搜索 title view
    CGRect stRect                   = CGRectMake(0, 0, Screen_Width, 64);
    ECRSearchTitleView *stv         = [[ECRSearchTitleView alloc] initWithFrame:stRect];
    stv.delegate                    = self;
    [UIView animateWithDuration:0.2 animations:^{
        self.navigationItem.titleView   = stv;
        self.navigationItem.rightBarButtonItem = nil;
        UIBarButtonItem *spaceBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
        spaceBarButtonItem.width = -4;
        self.navigationItem.leftBarButtonItems = @[spaceBarButtonItem];
        [self.navigationItem setHidesBackButton:YES];
    } completion:^(BOOL finished) {
        [stv lg_becomResponser];
    }];
}

#pragma mark -
#pragma mark ECRSearchTitleViewDelegate

// 关闭
- (void)stViewClose:(ECRSearchTitleView *)view
{
    _isSearch = NO;
    
    [_tableView reloadData];
}

// 搜索
- (void)stView:(ECRSearchTitleView *)view content:(NSString *)content
{
    [self searchContryWithText:content];
    [_tableView reloadData];
}

- (void)searchContryWithText:(NSString *)searchText
{
    if (self.arrSearchs && self.arrSearchs.count > 0) {
        [self.arrSearchs removeAllObjects];
    }
    
    self.arrSearchs = [NSMutableArray array];
    
    [_arrCountry enumerateObjectsUsingBlock:^(NSString *country, NSUInteger idx, BOOL *stop) {
        BOOL contrainCountry = NO;
        NSMutableString *customSearchText = [NSMutableString string];
        
        NSString *temp = nil;
        for (NSInteger i = 0; i < searchText.length; i++) {
            temp = [searchText substringWithRange:NSMakeRange(i, 1)];
            if ([NSString isEmpty:temp]) {
                [customSearchText appendString:temp];
            }
            else {
                NSString *firstLetter = [NSString firstLetter:temp];
                if ([firstLetter isEqualToString:@"#"]) {
                    [customSearchText appendString:temp];
                }
                else {
                    [customSearchText appendString:firstLetter];
                }
            }
        }
        contrainCountry = ([searchText rangeOfString:searchText].location != NSNotFound);
        contrainCountry = contrainCountry || ([customSearchText rangeOfString:[searchText uppercaseString]].location != NSNotFound);
        
        if (searchText) {
            contrainCountry = contrainCountry || ([customSearchText rangeOfString:searchText].location != NSNotFound);
        }
        
        if (contrainCountry) {
            [self.arrSearchs addObject:country];
        }
    }];
    
    NSLog(@"%@", self.arrSearchs);
}

#pragma mark -
#pragma mark 属性

- (NSMutableArray *)arrIndexCharacter
{
    if (_arrIndexCharacter == nil) {
        _arrIndexCharacter = [NSMutableArray array];
    }
    return _arrIndexCharacter;
}

- (NSMutableArray *)arrIndexTitles
{
    if (_arrIndexTitles == nil) {
        _arrIndexTitles = [NSMutableArray arrayWithArray:[NSString indexLetters]];
    }
    return _arrIndexTitles;
}

@end
